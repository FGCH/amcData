{
# Convert data frames to data.table type objects
D1Temp <- data.table::data.table(D1, key = KeyVar)
D2Temp <- data.table::data.table(D2, key = KeyVar)
# Merge data.tables
OutDT <- D2Temp[D1Temp]
# Fill in missing values from D1 with values from D2
V = quote(list(var))
V.1 = quote(list(paste0(var, ".1")))
OutDT <- OutDT[is.na(eval(V.1)), eval(V.1):=eval(V1)]
# Clean up and export
OutDF <- data.frame(OutDT)
OutDF
}
Test <- FillIn(WDIData, EuroDebtSur, var = "CashSurplusDeficit")
TestAgain <- subset(Test, !is.na(CashSurplusDeficit))
rstudio::viewData(TestAgain)
FillIn <- function(D1, D2, var, KeyVar = c("iso2c", "year"))
{
# Give var a generic name
D1TempN <- plyr::rename(D1, c(var = "VarGen"))
D2TempN <- plyr::rename(D2, c(var = "VarGen.1"))
# Convert data frames to data.table type objects
D1Temp <- data.table::data.table(D1TempN, key = KeyVar)
D2Temp <- data.table::data.table(D2TempN, key = KeyVar)
# Merge data.tables
OutDT <- D2Temp[D1Temp]
# Fill in missing values from D1 with values from D2
OutDT <- OutDT[is.na(VarGen.1), VarGen.1 := VarGen]
# Clean up and export
OutDF <- data.frame(OutDT)
OutDF
}
Test <- FillIn(WDIData, EuroDebtSur, var = "CashSurplusDeficit")
?quote
var <- "Test"
quote(var)
FillIn <- function(D1, D2, var, KeyVar = c("iso2c", "year"))
{
# Give var a generic name
D1TempN <- plyr::rename(D1, c(quote(var) = "VarGen"))
D2TempN <- plyr::rename(D2, c(quote(var) = "VarGen.1"))
# Convert data frames to data.table type objects
D1Temp <- data.table::data.table(D1TempN, key = KeyVar)
D2Temp <- data.table::data.table(D2TempN, key = KeyVar)
# Merge data.tables
OutDT <- D2Temp[D1Temp]
# Fill in missing values from D1 with values from D2
OutDT <- OutDT[is.na(VarGen.1), VarGen.1 := VarGen]
# Clean up and export
OutDF <- data.frame(OutDT)
FillIn <- function(D1, D2, var, KeyVar = c("iso2c", "year"))
{
# Give var a generic name
D1TempN <- plyr::rename(D1, c(substitute(var) = "VarGen"))
FillIn <- function(D1, D2, var, KeyVar = c("iso2c", "year"))
{
# Give var a generic name
D1TempN <- rename::rename(D1, c(var = "VarGen"))
D2TempN <- rename::rename(D2, c(var = "VarGen.1"))
# Convert data frames to data.table type objects
D1Temp <- data.table::data.table(D1TempN, key = KeyVar)
D2Temp <- data.table::data.table(D2TempN, key = KeyVar)
# Merge data.tables
OutDT <- D2Temp[D1Temp]
# Fill in missing values from D1 with values from D2
OutDT <- OutDT[is.na(VarGen.1), VarGen.1 := VarGen]
# Clean up and export
OutDF <- data.frame(OutDT)
OutDF
}
Test <- FillIn(WDIData, EuroDebtSur, var = "CashSurplusDeficit")
FillIn <- function(D1, D2, var, KeyVar = c("iso2c", "year"))
{
# Give var a generic name
D1TempN <- reshape::rename(D1, c(var = "VarGen"))
D2TempN <- reshape::rename(D2, c(var = "VarGen.1"))
# Convert data frames to data.table type objects
D1Temp <- data.table::data.table(D1TempN, key = KeyVar)
D2Temp <- data.table::data.table(D2TempN, key = KeyVar)
# Merge data.tables
OutDT <- D2Temp[D1Temp]
# Fill in missing values from D1 with values from D2
OutDT <- OutDT[is.na(VarGen.1), VarGen.1 := VarGen]
# Clean up and export
OutDF <- data.frame(OutDT)
OutDF
}
Test <- FillIn(WDIData, EuroDebtSur, var = "CashSurplusDeficit")
FillIn <- function(D1, D2, var, KeyVar = c("iso2c", "year"))
{
# Give var a generic name
D1TempN <- reshape::rename(D1, c(var = "VarGen"))
D2TempN <- reshape::rename(D2, c(var = "VarGen.1"))
# Convert data frames to data.table type objects
D1Temp <- data.table::data.table(D1TempN, key = KeyVar)
D2Temp <- data.table::data.table(D2TempN, key = KeyVar)
# Merge data.tables
OutDT <- D2Temp[D1Temp]
OutDT
}
Test <- FillIn(WDIData, EuroDebtSur, var = "CashSurplusDeficit")
names(Test)
FillIn <- function(D1, D2, var, KeyVar = c("iso2c", "year"))
{
# Give var a generic name
D1TempN <- plyr::rename(D1, c(var = "VarGen"))
D1TempN
}
Test <- FillIn(WDIData, EuroDebtSur, var = "CashSurplusDeficit")
?SetNames
?setNames
FillIn <- function(D1, D2, var, KeyVar = c("iso2c", "year"))
{
# Give var a generic name
names(D1)[match(var,names(D1))] <- "VarGen"
names(D2)[match(var,names(D2))] <- "VarGen.1"
# Convert data frames to data.table type objects
D1Temp <- data.table::data.table(D1TempN, key = KeyVar)
D2Temp <- data.table::data.table(D2TempN, key = KeyVar)
# Merge data.tables
OutDT <- D2Temp[D1Temp]
# Fill in missing values from D1 with values from D2
OutDT <- OutDT[is.na(VarGen.1), VarGen.1 := VarGen]
# Clean up and export
OutDF <- data.frame(OutDT)
OutDF
}
Test <- FillIn(WDIData, EuroDebtSur, var = "CashSurplusDeficit")
FillIn <- function(D1, D2, var, KeyVar = c("iso2c", "year"))
{
# Give var a generic name
names(D1)[match(var,names(D1))] <- "VarGen"
names(D2)[match(var,names(D2))] <- "VarGen.1"
# Convert data frames to data.table type objects
D1Temp <- data.table::data.table(D1, key = KeyVar)
D2Temp <- data.table::data.table(D2, key = KeyVar)
# Merge data.tables
OutDT <- D2Temp[D1Temp]
# Fill in missing values from D1 with values from D2
OutDT <- OutDT[is.na(VarGen.1), VarGen.1 := VarGen]
# Clean up and export
OutDF <- data.frame(OutDT)
OutDF
}
Test <- FillIn(WDIData, EuroDebtSur, var = "CashSurplusDeficit")
rstudio::viewData(Test)
TestAgain <- subset(Test, !is.na(VarGen.1))
rstudio::viewData(TestAgain)
TestAgain <- subset(Test, !is.na(VarGen))
rstudio::viewData(TestAgain)
rstudio::viewData(Test)
TestAgain <- subset(Test, country == "Slovak Republic"
)
rstudio::viewData(TestAgain)
FillIn <- function(D1, D2, var, KeyVar = c("iso2c", "year"))
{
# Give var a generic name
names(D1)[match(var,names(D1))] <- "VarGen"
names(D2)[match(var,names(D2))] <- "VarGen.1"
# Convert data frames to data.table type objects
D1Temp <- data.table::data.table(D1, key = KeyVar)
D2Temp <- data.table::data.table(D2, key = KeyVar)
# Merge data.tables
OutDT <- D2Temp[D1Temp]
# Fill in missing values from D1 with values from D2
OutDT <- OutDT[is.na(VarGen), VarGen := VarGen.1]
# Clean up and export
OutDF <- data.frame(OutDT)
OutDF
}
Test <- FillIn(WDIData, EuroDebtSur, var = "CashSurplusDeficit")
TestAgain <- subset(Test, country == "Slovak Republic"
)
rstudio::viewData(TestAgain)
FillIn <- function(D1, D2, var, KeyVar = c("iso2c", "year"))
{
# Give var a generic name
names(D1)[match(var, names(D1))] <- "VarGen"
names(D2)[match(var, names(D2))] <- "VarGen.1"
# Convert data frames to data.table type objects
D1Temp <- data.table::data.table(D1, key = KeyVar)
D2Temp <- data.table::data.table(D2, key = KeyVar)
# Merge data.tables
OutDT <- D2Temp[D1Temp]
# Fill in missing values from D1 with values from D2
OutDT <- OutDT[is.na(VarGen), VarGen := VarGen.1]
# Clean up and export
OutDF <- data.frame(OutDT)
names(OutDF)[match("VarGen", names(OutDF))] <- var
OutDF <- OutDF[, names(D1)]
OutDF
}
Test <- FillIn(WDIData, EuroDebtSur, var = "CashSurplusDeficit")
FillIn <- function(D1, D2, var, KeyVar = c("iso2c", "year"))
{
# Give var a generic name
names(D1)[match(var, names(D1))] <- "VarGen"
names(D2)[match(var, names(D2))] <- "VarGen.1"
# Convert data frames to data.table type objects
D1Temp <- data.table::data.table(D1, key = KeyVar)
D2Temp <- data.table::data.table(D2, key = KeyVar)
# Merge data.tables
OutDT <- D2Temp[D1Temp]
# Fill in missing values from D1 with values from D2
OutDT <- OutDT[is.na(VarGen), VarGen := VarGen.1]
# Clean up and export
OutDF <- data.frame(OutDT)
names(OutDF)[match("VarGen", names(OutDF))] <- var
OutDF
}
Test <- FillIn(WDIData, EuroDebtSur, var = "CashSurplusDeficit")
rstudio::viewData(Test)
TestAgain <- subset(Test, country == "Slovak Republic")
rstudio::viewData(TestAgain)
?setdiff
FillIn <- function(D1, D2, var, KeyVar = c("iso2c", "year"))
{
# Give var a generic name
names(D1)[match(var, names(D1))] <- "VarGen"
names(D2)[match(var, names(D2))] <- "VarGen.1"
# Convert data frames to data.table type objects
D1Temp <- data.table::data.table(D1, key = KeyVar)
D2Temp <- data.table::data.table(D2, key = KeyVar)
# Merge data.tables
OutDT <- D2Temp[D1Temp]
# Fill in missing values from D1 with values from D2
OutDT <- OutDT[is.na(VarGen), VarGen := VarGen.1]
# Clean up and export
OutDF <- data.frame(OutDT)
names(OutDF)[match("VarGen", names(OutDF))] <- var
Keepers <- setdiff(names(OutDF), "VarGen.1")
OutDF <- OutDF[, Keepers]
OutDF
}
Test <- FillIn(WDIData, EuroDebtSur, var = "CashSurplusDeficit")
rstudio::viewData(Test)
TestAgain <- subset(Test, country == "Slovak Republic")
rstudio::viewData(TestAgain)
?corr
FillIn <- function(D1, D2, var1, var2 = NULL, KeyVar = c("iso2c", "year"))
{
# Give var2 the same name as var1 if var2 is NULL
if (is.null(var2)){
var2 <- var1
}
# Give var a generic name
names(D1)[match(var1, names(D1))] <- "VarGen"
names(D2)[match(var2, names(D2))] <- "VarGen.1"
# Convert data frames to data.table type objects
D1Temp <- data.table::data.table(D1, key = KeyVar)
D2Temp <- data.table::data.table(D2, key = KeyVar)
# Merge data.tables
OutDT <- D2Temp[D1Temp]
# Fill in missing values from D1 with values from D2
OutDT <- OutDT[is.na(VarGen), VarGen := VarGen.1]
# Convert back to data frame
OutDF <- data.frame(OutDT)
# Tell the user what the correlation coefficient is between the variables
CORR <- with(Out){
corr(VarGen, VarGen.1)
}
# Remove uncombined variable and return main variable's name
names(OutDF)[match("VarGen", names(OutDF))] <- var
Keepers <- setdiff(names(OutDF), "VarGen.1")
OutDF <- OutDF[, Keepers]
OutDF
}
Test <- FillIn(WDIData, EuroDebtSur, var1 = "CashSurplusDeficit")
FillIn <- function(D1, D2, var1, var2 = NULL, KeyVar = c("iso2c", "year"))
{
# Give var2 the same name as var1 if var2 is NULL
if (is.null(var2)){
var2 <- var1
}
# Give var a generic name
names(D1)[match(var1, names(D1))] <- "VarGen"
names(D2)[match(var2, names(D2))] <- "VarGen.1"
# Convert data frames to data.table type objects
D1Temp <- data.table::data.table(D1, key = KeyVar)
D2Temp <- data.table::data.table(D2, key = KeyVar)
# Merge data.tables
OutDT <- D2Temp[D1Temp]
# Fill in missing values from D1 with values from D2
OutDT <- OutDT[is.na(VarGen), VarGen := VarGen.1]
# Convert back to data frame
OutDF <- data.frame(OutDT)
# Tell the user what the correlation coefficient is between the variables
CORR <- with(Out){
corr(VarGen, VarGen.1)
?with
FillIn <- function(D1, D2, var1, var2 = NULL, KeyVar = c("iso2c", "year"))
{
# Give var2 the same name as var1 if var2 is NULL
if (is.null(var2)){
var2 <- var1
}
# Give var a generic name
names(D1)[match(var1, names(D1))] <- "VarGen"
names(D2)[match(var2, names(D2))] <- "VarGen.1"
# Convert data frames to data.table type objects
D1Temp <- data.table::data.table(D1, key = KeyVar)
D2Temp <- data.table::data.table(D2, key = KeyVar)
# Merge data.tables
OutDT <- D2Temp[D1Temp]
# Fill in missing values from D1 with values from D2
OutDT <- OutDT[is.na(VarGen), VarGen := VarGen.1]
# Convert back to data frame
OutDF <- data.frame(OutDT)
# Tell the user what the correlation coefficient is between the variables
CORR <- with(Out,
corr(VarGen, VarGen.1)
)
# Remove uncombined variable and return main variable's name
names(OutDF)[match("VarGen", names(OutDF))] <- var
Keepers <- setdiff(names(OutDF), "VarGen.1")
OutDF <- OutDF[, Keepers]
OutDF
}
Test <- FillIn(WDIData, EuroDebtSur, var1 = "CashSurplusDeficit")
FillIn <- function(D1, D2, var1, var2 = NULL, KeyVar = c("iso2c", "year"))
{
# Give var2 the same name as var1 if var2 is NULL
if (is.null(var2)){
var2 <- var1
}
# Give var a generic name
names(D1)[match(var1, names(D1))] <- "VarGen"
names(D2)[match(var2, names(D2))] <- "VarGen.1"
# Convert data frames to data.table type objects
D1Temp <- data.table::data.table(D1, key = KeyVar)
D2Temp <- data.table::data.table(D2, key = KeyVar)
# Merge data.tables
OutDT <- D2Temp[D1Temp]
# Fill in missing values from D1 with values from D2
OutDT <- OutDT[is.na(VarGen), VarGen := VarGen.1]
# Convert back to data frame
OutDF <- data.frame(OutDT)
# Tell the user what the correlation coefficient is between the variables
CORR <- with(OutDF,
corr(VarGen, VarGen.1)
)
print(CORR)
# Remove uncombined variable and return main variable's name
names(OutDF)[match("VarGen", names(OutDF))] <- var
Keepers <- setdiff(names(OutDF), "VarGen.1")
OutDF <- OutDF[, Keepers]
OutDF
}
Test <- FillIn(WDIData, EuroDebtSur, var1 = "CashSurplusDeficit")
FillIn <- function(D1, D2, var1, var2 = NULL, KeyVar = c("iso2c", "year"))
{
# Give var2 the same name as var1 if var2 is NULL
if (is.null(var2)){
var2 <- var1
}
# Give var a generic name
names(D1)[match(var1, names(D1))] <- "VarGen"
names(D2)[match(var2, names(D2))] <- "VarGen.1"
# Convert data frames to data.table type objects
D1Temp <- data.table::data.table(D1, key = KeyVar)
D2Temp <- data.table::data.table(D2, key = KeyVar)
# Merge data.tables
OutDT <- D2Temp[D1Temp]
# Fill in missing values from D1 with values from D2
OutDT <- OutDT[is.na(VarGen), VarGen := VarGen.1]
# Convert back to data frame
OutDF <- data.frame(OutDT)
# Tell the user what the correlation coefficient is between the variables
CORR <- with(OutDF,
corr(VarGen, VarGen.1)
)
print(CORR)
}
Test <- FillIn(WDIData, EuroDebtSur, var1 = "CashSurplusDeficit")
FillIn <- function(D1, D2, var1, var2 = NULL, KeyVar = c("iso2c", "year"))
{
# Give var2 the same name as var1 if var2 is NULL
if (is.null(var2)){
var2 <- var1
} else
# Give var a generic name
names(D1)[match(var1, names(D1))] <- "VarGen"
names(D2)[match(var2, names(D2))] <- "VarGen.1"
# Convert data frames to data.table type objects
D1Temp <- data.table::data.table(D1, key = KeyVar)
D2Temp <- data.table::data.table(D2, key = KeyVar)
# Merge data.tables
OutDT <- D2Temp[D1Temp]
# Fill in missing values from D1 with values from D2
OutDT <- OutDT[is.na(VarGen), VarGen := VarGen.1]
# Convert back to data frame
OutDF <- data.frame(OutDT)
# Tell the user what the correlation coefficient is between the variables
CORR <- with(OutDF,
corr(VarGen, VarGen.1)
)
print(CORR)
}
Test <- FillIn(WDIData, EuroDebtSur, var1 = "CashSurplusDeficit")
FillIn <- function(D1, D2, var1, var2 = NULL, KeyVar = c("iso2c", "year"))
{
# Give var2 the same name as var1 if var2 is NULL
if (is.null(var2)){
var2 <- var1
} else {
var2 <- var2
}
# Give var a generic name
names(D1)[match(var1, names(D1))] <- "VarGen"
names(D2)[match(var2, names(D2))] <- "VarGen.1"
# Convert data frames to data.table type objects
D1Temp <- data.table::data.table(D1, key = KeyVar)
D2Temp <- data.table::data.table(D2, key = KeyVar)
# Merge data.tables
OutDT <- D2Temp[D1Temp]
# Fill in missing values from D1 with values from D2
OutDT <- OutDT[is.na(VarGen), VarGen := VarGen.1]
# Convert back to data frame
OutDF <- data.frame(OutDT)
# Tell the user what the correlation coefficient is between the variables
CORR <- with(OutDF,
corr(VarGen, VarGen.1)
)
print(CORR)
# Remove uncombined variable and return main variable's name
names(OutDF)[match("VarGen", names(OutDF))] <- var
Keepers <- setdiff(names(OutDF), "VarGen.1")
OutDF <- OutDF[, Keepers]
OutDF
}
Test <- FillIn(WDIData, EuroDebtSur, var1 = "CashSurplusDeficit")
FillIn <- function(D1, D2, var1, var2 = NULL, KeyVar = c("iso2c", "year"))
{
# Give var2 the same name as var1 if var2 is NULL
if (is.null(var2)){
var2 <- var1
} else {
var2 <- var2
}
# Give var a generic name
names(D1)[match(var1, names(D1))] <- "VarGen"
names(D2)[match(var2, names(D2))] <- "VarGen.1"
}
Test <- FillIn(WDIData, EuroDebtSur, var1 = "CashSurplusDeficit")
FillIn <- function(D1, D2, var1, var2 = NULL, KeyVar = c("iso2c", "year"))
{
# Give var2 the same name as var1 if var2 is NULL
if (is.null(var2)){
var2 <- var1
} else {
var2 <- var2
}
# Give var a generic name
names(D1)[match(var1, names(D1))] <- "VarGen"
names(D2)[match(var2, names(D2))] <- "VarGen.1"
# Convert data frames to data.table type objects
D1Temp <- data.table::data.table(D1, key = KeyVar)
D2Temp <- data.table::data.table(D2, key = KeyVar)
# Merge data.tables
OutDT <- D2Temp[D1Temp]
OutDt
}
FillIn <- function(D1, D2, var1, var2 = NULL, KeyVar = c("iso2c", "year"))
{
# Give var2 the same name as var1 if var2 is NULL
if (is.null(var2)){
var2 <- var1
} else {
var2 <- var2
}
# Give var a generic name
names(D1)[match(var1, names(D1))] <- "VarGen"
names(D2)[match(var2, names(D2))] <- "VarGen.1"
# Convert data frames to data.table type objects
D1Temp <- data.table::data.table(D1, key = KeyVar)
D2Temp <- data.table::data.table(D2, key = KeyVar)
# Merge data.tables
OutDT <- D2Temp[D1Temp]
OutDT
}
Test <- FillIn(WDIData, EuroDebtSur, var1 = "CashSurplusDeficit")
FillIn <- function(D1, D2, var1, var2 = NULL, KeyVar = c("iso2c", "year"))
{
# Give var2 the same name as var1 if var2 is NULL
if (is.null(var2)){
var2 <- var1
} else {
var2 <- var2
}
# Give var a generic name
names(D1)[match(var1, names(D1))] <- "VarGen"
names(D2)[match(var2, names(D2))] <- "VarGen.1"
# Convert data frames to data.table type objects
D1Temp <- data.table::data.table(D1, key = KeyVar)
D2Temp <- data.table::data.table(D2, key = KeyVar)
# Merge data.tables
OutDT <- D2Temp[D1Temp]
# Fill in missing values from D1 with values from D2
OutDT <- OutDT[is.na(VarGen), VarGen := VarGen.1]
# Convert back to data frame
OutDF <- data.frame(OutDT)
# Tell the user what the correlation coefficient is between the variables
CORR <- corr(OutDF$VarGen, OutDF$VarGen)
print(CORR)
# Remove uncombined variable and return main variable's name
names(OutDF)[match("VarGen", names(OutDF))] <- var
Keepers <- setdiff(names(OutDF), "VarGen.1")
OutDF <- OutDF[, Keepers]
OutDF
}
Test <- FillIn(WDIData, EuroDebtSur, var1 = "CashSurplusDeficit")
