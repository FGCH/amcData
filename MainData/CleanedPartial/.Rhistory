facet_grid(~ method) +
geom_linerange(size = 3, alpha = 0.6) +
scale_x_discrete(breaks = name.break, labels = labels.break) +
scale_color_manual(values = cols, name = "") +
geom_hline(aes(intercept= 0), linetype = "dotted") +
ylab("\nCoefficient Estimate") + xlab("") +
coord_flip() +
theme_bw(base_size = 11)
print(est.plot)
gm <- estimates$var[var == "GlobalModel1"]
gm <- estimates$var[var == "pres_party"]
gm <- estimates$var[estimates$var == "pres_party"]
gm
gm <- estimates$var[estimates$var == "GlobalModel1"]
gm
estimates$var[estimates$var == "GlobalModel1"] <- "GlobalModel"
View(estimates)
est.plot <- ggplot(data = estimates, aes(x = reorder(var, lower), ymin = lower, ymax = upper, colour = match)) +
facet_grid(~ method) +
geom_linerange(size = 3, alpha = 0.6) +
scale_x_discrete(breaks = name.break, labels = labels.break) +
scale_color_manual(values = cols, name = "") +
geom_hline(aes(intercept= 0), linetype = "dotted") +
ylab("\nCoefficient Estimate") + xlab("") +
coord_flip() +
theme_bw(base_size = 11)
print(est.plot)
est.plot <- ggplot(data = estimates, aes(x = reorder(var, lower), ymin = lower, ymax = upper, colour = match)) +
facet_grid(~ method) +
geom_linerange(size = 3, alpha = 0.6) +
#scale_x_discrete(breaks = name.break, labels = labels.break) +
scale_color_manual(values = cols, name = "") +
geom_hline(aes(intercept= 0), linetype = "dotted") +
ylab("\nCoefficient Estimate") + xlab("") +
coord_flip() +
theme_bw(base_size = 11)
print(est.plot)
est.plot <- ggplot(data = estimates, aes(x = reorder(var, lower), ymin = lower, ymax = upper, colour = match)) +
facet_grid(~ method) +
geom_linerange(size = 3, alpha = 0.6) +
scale_x_discrete(breaks = name.break, labels = labels.break) +
scale_color_manual(values = cols, name = "") +
geom_hline(aes(intercept= 0), linetype = "dotted") +
ylab("\nCoefficient Estimate") + xlab("") +
coord_flip() +
theme_bw(base_size = 11)
print(est.plot)
str(estimates)
####################
# Greenbook MatchIt Analyses Coef Plots Compare
# Christopher Gandrud
# 11 July 2012
####################
#### Figures for ls Results Catapilar Plot ####
# .cat for catapilar graph
# .sum for summary
### LS
# Extract and melt quantiles for marginal posterior distributions (not matched data set)
NL7.cat <- confint(NL7)
NL7.cat.sum <- as.data.frame(NL7.cat)
NL7.cat.sum$var <- rownames(NL7.cat.sum)
NL7.lower.molten <- melt(NL7.cat.sum, id = c("var"), measure.vars = c("2.5 %"), value.name = "lower")
NL7.lower.molten <- NL7.lower.molten[, -2]
NL7.upper.molten <- melt(NL7.cat.sum, id = c("var"), measure.vars = c("97.5 %"), value.name = "upper")
NL7.upper.molten <- NL7.upper.molten[, -2]
NL7.molten <- merge(NL7.lower.molten, NL7.upper.molten)
NL7.molten$match <- "Not Matched"
# Extract and melt quantiles for marginal posterior distributions (matched data set)
PL7.cat <- confint(PL7)
PL7.cat.sum <- as.data.frame(PL7.cat)
PL7.cat.sum$var <- rownames(PL7.cat.sum)
PL7.lower.molten <- melt(PL7.cat.sum, id = c("var"), measure.vars = c("2.5 %"), value.name = "lower")
PL7.lower.molten <- PL7.lower.molten[, -2]
PL7.upper.molten <- melt(PL7.cat.sum, id = c("var"), measure.vars = c("97.5 %"), value.name = "upper")
PL7.upper.molten <- PL7.upper.molten[, -2]
PL7.molten <- merge(PL7.lower.molten, PL7.upper.molten)
PL7.molten$match <- "Matched"
estimates.ls <- rbind(NL7.molten, PL7.molten)
estimates.ls$method <- "OLS"
#### Figures for normal.bayes Results Catapilar Plot ####
# .cat for catapilar graph
# .sum for summary
### Normal Bayes Models
# Extract and melt quantiles for marginal posterior distributions (not matched data set)
NB1.cat <- summary(NB1)
NB1.cat.sum <- as.data.frame(NB1.cat$summary)
NB1.cat.sum$var <- rownames(NB1.cat.sum)
NB1.lower.molten <- melt(NB1.cat.sum, id = c("var"), measure.vars = c("2.5%"), value.name = "lower")
NB1.lower.molten <- NB1.lower.molten[, -2]
NB1.upper.molten <- melt(NB1.cat.sum, id = c("var"), measure.vars = c("97.5%"), value.name = "upper")
NB1.upper.molten <- NB1.upper.molten[, -2]
NB1.molten <- merge(NB1.lower.molten, NB1.upper.molten)
NB1.molten$match <- "Not Matched"
# Extract and melt quantiles for marginal posterior distributions (matched data set)
PB1.cat <- summary(PB1)
PB1.cat.sum <- as.data.frame(PB1.cat$summary)
PB1.cat.sum$var <- rownames(PB1.cat.sum)
PB1.lower.molten <- melt(PB1.cat.sum, id = c("var"), measure.vars = c("2.5%"), value.name = "lower")
PB1.lower.molten <- PB1.lower.molten[, -2]
PB1.upper.molten <- melt(PB1.cat.sum, id = c("var"), measure.vars = c("97.5%"), value.name = "upper")
PB1.upper.molten <- PB1.upper.molten[, -2]
PB1.molten <- merge(PB1.lower.molten, PB1.upper.molten)
PB1.molten$match <- "Matched"
estimates.b <- rbind(NB1.molten, PB1.molten)
estimates.b$method <- "Normal Bayes"
estimates <- rbind(estimates.ls, estimates.b)
# Remove Intercept
estimates <- subset(estimates, var != c("(Intercept)"))
estimates <- subset(estimates, var != c("sigma2"))
##### Create comparison plot
cols <- c("#67A380", "#696969")
name.break <- c("pres_party", "house_dem_rep", "ExpenditureGDP", "recession", "DebtGDP", "time_to_election", "PotentialGDP", "GlobalModel1", "senate_dem_rep")
labels.break <- c("Dem. President", "Prop. House Dem.", "Gov. Expenditure (% GDP)", "Recession", "Gov. Debt (% GDP)", "Quarters Until Election", "Potential GDP (%GDP)", "GlobalModel", "Prop. Senate Dem.")
est.plot <- ggplot(data = estimates, aes(x = reorder(var, lower), ymin = lower, ymax = upper, colour = match)) +
facet_grid(~ method) +
geom_linerange(size = 3, alpha = 0.6) +
scale_x_discrete(breaks = name.break, labels = labels.break) +
scale_color_manual(values = cols, name = "") +
geom_hline(aes(intercept= 0), linetype = "dotted") +
ylab("\nCoefficient Estimate") + xlab("") +
coord_flip() +
theme_bw(base_size = 11)
print(est.plot)
####################
# Greenbook MatchIt Analyses Coef Plots Compare
# Christopher Gandrud
# 11 July 2012
####################
#### Figures for ls Results Catapilar Plot ####
# .cat for catapilar graph
# .sum for summary
### LS
# Extract and melt quantiles for marginal posterior distributions (not matched data set)
NL7.cat <- confint(NL7)
NL7.cat.sum <- as.data.frame(NL7.cat)
NL7.cat.sum$var <- rownames(NL7.cat.sum)
NL7.lower.molten <- melt(NL7.cat.sum, id = c("var"), measure.vars = c("2.5 %"), value.name = "lower")
NL7.lower.molten <- NL7.lower.molten[, -2]
NL7.upper.molten <- melt(NL7.cat.sum, id = c("var"), measure.vars = c("97.5 %"), value.name = "upper")
NL7.upper.molten <- NL7.upper.molten[, -2]
NL7.molten <- merge(NL7.lower.molten, NL7.upper.molten)
NL7.molten$match <- "Not Matched"
# Extract and melt quantiles for marginal posterior distributions (matched data set)
PL7.cat <- confint(PL7)
PL7.cat.sum <- as.data.frame(PL7.cat)
PL7.cat.sum$var <- rownames(PL7.cat.sum)
PL7.lower.molten <- melt(PL7.cat.sum, id = c("var"), measure.vars = c("2.5 %"), value.name = "lower")
PL7.lower.molten <- PL7.lower.molten[, -2]
PL7.upper.molten <- melt(PL7.cat.sum, id = c("var"), measure.vars = c("97.5 %"), value.name = "upper")
PL7.upper.molten <- PL7.upper.molten[, -2]
PL7.molten <- merge(PL7.lower.molten, PL7.upper.molten)
PL7.molten$match <- "Matched"
estimates.ls <- rbind(NL7.molten, PL7.molten)
estimates.ls$method <- "OLS"
#### Figures for normal.bayes Results Catapilar Plot ####
# .cat for catapilar graph
# .sum for summary
### Normal Bayes Models
# Extract and melt quantiles for marginal posterior distributions (not matched data set)
NB1.cat <- summary(NB1)
NB1.cat.sum <- as.data.frame(NB1.cat$summary)
NB1.cat.sum$var <- rownames(NB1.cat.sum)
NB1.lower.molten <- melt(NB1.cat.sum, id = c("var"), measure.vars = c("2.5%"), value.name = "lower")
NB1.lower.molten <- NB1.lower.molten[, -2]
NB1.upper.molten <- melt(NB1.cat.sum, id = c("var"), measure.vars = c("97.5%"), value.name = "upper")
NB1.upper.molten <- NB1.upper.molten[, -2]
NB1.molten <- merge(NB1.lower.molten, NB1.upper.molten)
NB1.molten$match <- "Not Matched"
# Extract and melt quantiles for marginal posterior distributions (matched data set)
PB1.cat <- summary(PB1)
PB1.cat.sum <- as.data.frame(PB1.cat$summary)
PB1.cat.sum$var <- rownames(PB1.cat.sum)
PB1.lower.molten <- melt(PB1.cat.sum, id = c("var"), measure.vars = c("2.5%"), value.name = "lower")
PB1.lower.molten <- PB1.lower.molten[, -2]
PB1.upper.molten <- melt(PB1.cat.sum, id = c("var"), measure.vars = c("97.5%"), value.name = "upper")
PB1.upper.molten <- PB1.upper.molten[, -2]
PB1.molten <- merge(PB1.lower.molten, PB1.upper.molten)
PB1.molten$match <- "Matched"
estimates.b <- rbind(NB1.molten, PB1.molten)
estimates.b$method <- "Normal Bayes"
estimates <- rbind(estimates.ls, estimates.b)
# Remove Intercept
estimates <- subset(estimates, var != c("(Intercept)"))
estimates <- subset(estimates, var != c("sigma2"))
##### Create comparison plot
cols <- c("#67A380", "#696969")
name.break <- c("pres_party", "house_dem_rep", "ExpenditureGDP", "recession", "DebtGDP", "time_to_election", "PotentialGDP", "GlobalModel1", "senate_dem_rep")
labels.break <- c("Dem. President", "Prop. House Dem.", "Gov. Expenditure (% GDP)", "Recession", "Gov. Debt (% GDP)", "Quarters Until Election", "Potential GDP (%GDP)", "Global Model", "Prop. Senate Dem.")
est.plot <- ggplot(data = estimates, aes(x = reorder(var, lower), ymin = lower, ymax = upper, colour = match)) +
facet_grid(~ method) +
geom_linerange(size = 3, alpha = 0.6) +
scale_x_discrete(breaks = name.break, labels = labels.break) +
scale_color_manual(values = cols, name = "") +
geom_hline(aes(intercept= 0), linetype = "dotted") +
ylab("\nCoefficient Estimate") + xlab("") +
coord_flip() +
theme_bw(base_size = 11)
print(est.plot)
cols <- c("#67A380", "#696969")
name.break <- c("pres_party", "house_dem_rep", "ExpenditureGDP", "recession", "DebtGDP", "time_to_election", "PotentialGDP", "GlobalModel1", "senate_dem_rep")
labels.break <- c("Dem. President", "Prop. House Dem.", "Gov. Expenditure (% GDP)", "Recession", "Gov. Debt (% GDP)", "Quarters Until Election", "Potential GDP (%GDP)", "Global Model", "Prop. Senate Dem.")
est.plot <- ggplot(data = estimates, aes(x = reorder(var, lower), ymin = lower, ymax = upper, colour = match)) +
facet_grid(~ method) +
geom_linerange(size = 3, alpha = 0.6) +
scale_x_discrete(breaks = name.break, labels = labels.break) +
scale_color_manual(values = cols, name = "") +
geom_hline(aes(intercept= 0), linetype = "dotted") +
ylab("\nCoefficient Estimate") + xlab("") +
coord_flip() +
theme_bw(base_size = 11)
print(est.plot)
install.packages(c("formatR", "tabplot"))
library(ascii)
?ascii
info <- sessionInfo()
info
ascii(info)
infoA <- ascii(info)
print(infoA, type = "pandoc")
install.packages("RGoogleData")
install.packages("RGoogleDocs")
library(RCurl)
URL <- "https://docs.google.com/spreadsheet/pub?key=0At4PfS_dcEwRdGRRRi1DZU1EYm1SVzRkNnFwRlh2eUE&output=csv"
NAMA <- getURL(URL)
NAMA <- read.csv(textConnection(NAMA))
View(NAMA)
names(NAMA)
NAMA$InitialPrivateFunding
NAMA$InitialPrivateFundingDetails
URL <- "https://docs.google.com/spreadsheet/pub?key=0At4PfS_dcEwRdGRRRi1DZU1EYm1SVzRkNnFwRlh2eUE&output=csv"
NAMA <- getURL(URL)
NAMA <- read.csv(textConnection(NAMA))
View(NAMA)
#########
# Exploritory AMC Analysis
# Christopher Gandrud
# Updated 17 July 2012
#########
# Load required packages
library(RCurl)
library(ggplot2)
library(Zelig)
# Load data from the GitHub site
url <- "https://raw.github.com/christophergandrud/amcData/master/MainData/amcData.csv"
main <- getURL(url)
main <- read.csv(textConnection(main))
##### Basic Boxplots ####
qplot(AMC, UDS, geom = "boxplot", data = main) + theme_bw()
#### Exploratory Models ####
M1 <- zelig(AMC ~ UDS + govoth, model = "logit", data = "main")
summary(main$AMC)
M1 <- zelig(govoth ~ UDS + govoth, model = "ls", data = "main")
M1 <- zelig(AMC ~ UDS + govoth, model = "ls", data = main)
M1 <- zelig(AMC ~ UDS + govoth, model = "logit", data = main)
summary(M1)
names(main)
M1 <- zelig(AMC ~ IMFProgram, model = "logit", data = main)
summary(M1)
str(main$AMC)
main$amc[main$AMC == "No AMC"] <- 0
main$amc[main$AMC == "AMC Created"] <- 1
M1 <- zelig(amc ~ IMFProgram, model = "logit", data = main)
#########
# Exploritory AMC Analysis
# Christopher Gandrud
# Updated 17 July 2012
#########
# Load required packages
library(RCurl)
library(ggplot2)
library(Zelig)
# Load data from the GitHub site
url <- "https://raw.github.com/christophergandrud/amcData/master/MainData/amcData.csv"
main <- getURL(url)
main <- read.csv(textConnection(main))
M1 <- zelig(AMC ~ IMFProgram, model = "logit", data = main)
fix(`M1`)
qplot(AMC, IMFProgram, geom = "jitter", data = main) + theme_bw()
qplot(AMC, IMFProgram, geom = "density", data = main) + theme_bw()
qplot(AMC, IMFProgram, geom = "tile", fill = Freq, data = main) + theme_bw()
?freq
??freq
qplot(AMC, IMFProgram, geom = "freqpoly", data = main) + theme_bw()
M1 <- zelig(AMC ~ IMFProgram, model = "logit", data = main)
summary(M1)
M1 <- zelig(AMC ~ IMFProgram + UDS, model = "logit", data = main)
summary(M1)
M1 <- zelig(AMC ~ IMFProgram + UDS, model = "probit", data = main)
summary(M1)
M1 <- zelig(AMC ~ IMFProgram + UDS + govoth, model = "logit", data = main)
summary(M1)
M1 <- zelig(AMC ~ IMFProgram + govoth + ElectionYear, model = "logit", data = main)
summary(M1)
M1 <- zelig(AMC ~ IMFProgram + execric, model = "logit", data = main)
M1 <- zelig(AMC ~ IMFProgram + execrlc, model = "logit", data = main)
M1 <- zelig(AMC ~ IMFProgram + execric, model = "logit", data = main)
summary(M1)
M2 <- zelig(AMC ~ execrlc +, model = "logit", data = main)
M2 <- zelig(AMC ~ execrlc, model = "logit", data = main)
summary(M2)
M2 <- zelig(AMC ~ execrlc, model = "logit", data = main)
cor(main$IMFProgram, main$AMC)
main$IMFnum <- numeric(main$IMFProgram)
clear
system("clear")
system('clear')
M1 <- zelig(AMC ~ IMFProgram + execrlc +, model = "logit", data = main)
M1 <- zelig(AMC ~ IMFProgram + execrlc, model = "logit", data = main)
M3 <- zelig(AMC ~ PeakNPLs, model = "logit", data = main)
summary(M3)
M3 <- zelig(AMC ~ PeakNPLs +IMFProgram, model = "logit", data = main)
summary(M3)
?package_skeleton
??package_skeleton
M2 <- zelig(AMC ~ govoth, model = "logit", data = main)
summary(M2)
summary(main$govoth)
qplot(AMC, govoth, geom = "boxplot", data = main) + theme_bw()
View(main)
#########
# Make amcData Data Set
# Christopher Gandrud
# Updated 17 July 2012
#########
# Set working directory
setwd("/git_repositories/amcData/SourceCode/DataCreation/")
source("LV_Data_Clean.R")
setwd("/git_repositories/amcData/SourceCode/DataCreation/")
source("AddDPIVariables.R")
setwd("/git_repositories/amcData/SourceCode/DataCreation/")
source("AddUDSVariables.R")
setwd("/git_repositories/amcData/SourceCode/DataCreation/")
source("MergeCleaned.R")
# Christopher Gandrud
# Updated 17 July 2012
############
# Set working directory and load the data.
setwd("/git_repositories/amcData/BaseFiles/DPI2010/")
# Load required packages
library(foreign)
library(countrycode)
library(xtable)
# Download zipped data from the IMF's DPI website: http://go.worldbank.org/2EAGGLRZ40
# Open DPI2010_stata9.dta file
dpiLong <- read.dta("DPI2010_stata9.dta")
# Keep specific variables
dpi <- dpiLong[, c("countryname", "year", "yrcurnt", "govoth", "execrlc")]
# Change missing value code from -999 to NA
dpiMissing <- c("yrcurnt", "govfrac", "execrlc")
############
# Clean Up Database of Political Institutions (2010) (DPI) Data
# Christopher Gandrud
# Updated 17 July 2012
############
# Set working directory and load the data.
setwd("/git_repositories/amcData/BaseFiles/DPI2010/")
# Load required packages
library(foreign)
library(countrycode)
library(xtable)
# Download zipped data from the IMF's DPI website: http://go.worldbank.org/2EAGGLRZ40
# Open DPI2010_stata9.dta file
dpiLong <- read.dta("DPI2010_stata9.dta")
# Keep specific variables
dpi <- dpiLong[, c("countryname", "year", "yrcurnt", "govfrac", "execrlc")]
# Change missing value code from -999 to NA
dpiMissing <- c("yrcurnt", "govfrac", "execrlc")
for (u in dpiMissing){
dpi[[u]][dpi[[u]] == -999] <- NA
}
# Create dichotomous chief executive election year dummy
dpi$ElectionYear[dpi$yrcurnt == 0] <- "ElectionYear"
dpi$ElectionYear[dpi$yrcurnt > 0] <- "NotElectionYear"
# Relable economic ideology variable
dpi$execrlc[dpi$execrlc == 0] <- NA
dpi$execrlc[dpi$execrlc == 1] <- "Right"
dpi$execrlc[dpi$execrlc == 2] <- "Center"
dpi$execrlc[dpi$execrlc == 3] <- "Left"
# Add IMF code id variable
dpi$imfcode <- countrycode(dpi$countryname, origin = "country.name", destination = "imf")
# Rename countryname
dpi <- rename(dpi, c(countryname = "country"))
# Create variable descriptions
ColNames <- names(dpi[, c(-1, -2, -7)])
Description <- c("Years left in the chief executive's current term", "Government party fractionalization", "Cheif executive's conomic policy orientation", "Year of an executive election (created from yrcurnt = 0)")
Source <- c("DPI")
VarList <- cbind(ColNames, Description)
VarList <- xtable(VarList)
DpiVariableTable <- print(VarList, type = "html")
cat("# Variable Labels and Variable Descriptions for DPI (2010) Data\n See: <http://go.worldbank.org/2EAGGLRZ40>\n\n", DpiVariableTable, file = "/git_repositories/amcData/MainData/VariableDescriptions/DPIVariableDescriptions.md")
# Save file
write.table(dpi, file = "/git_repositories/amcData/MainData/CleanedPartial/DpiData.csv", sep = ",")
#########
# Make amcData Data Set
# Christopher Gandrud
# Updated 17 July 2012
#########
# Set working directory
setwd("/git_repositories/amcData/SourceCode/DataCreation/")
source("LV_Data_Clean.R")
setwd("/git_repositories/amcData/SourceCode/DataCreation/")
source("AddDPIVariables.R")
setwd("/git_repositories/amcData/SourceCode/DataCreation/")
source("AddUDSVariables.R")
setwd("/git_repositories/amcData/SourceCode/DataCreation/")
source("MergeCleaned.R")
setwd("/git_repositories/amcData/SourceCode/DataCreation/")
source("LV_Data_Clean.R")
setwd("/git_repositories/amcData/SourceCode/DataCreation/")
source("AddDPIVariables.R")
setwd("/git_repositories/amcData/SourceCode/DataCreation/")
source("AddUDSVariables.R")
source("/git_repositories/amcData/SourceCode/DataCreation/AddUDSVariable.R")
source("AddUDSVariable.R")
source("/git_repositories/amcData/SourceCode/DataCreation/AddUDSVariable.R")
setwd("/git_repositories/amcData/SourceCode/DataCreation/")
source("AddUDSVariable.R")
setwd("/git_repositories/amcData/SourceCode/DataCreation/")
source("MergeCleaned.R")
library(RCurl)
library(ggplot2)
library(Zelig)
# Load data from the GitHub site
url <- "https://raw.github.com/christophergandrud/amcData/master/MainData/amcData.csv"
main <- getURL(url)
main <- read.csv(textConnection(main))
M2 <- zelig(AMC ~ govfrac, model = "logit", data = main)
summary(M2)
summary(main$govfrac)
qplot(AMC, govfrac, geom = "boxplot", data = main) + theme_bw()
M2 <- zelig(AMC ~ IMFProgram + govfrac, model = "logit", data = main)
summary(M2)
main$SingleParty[main$govfrac > 0] <- 0
main$SingleParty[main$govfrac == 0] <- 1
M2 <- zelig(AMC ~ IMFProgram + SingleParty, model = "logit", data = main)
summary(M2)
qplot(AMC, SingleParty, geom = "boxplot", data = main) + theme_bw()
main$SingleParty[main$govfrac > 0] <- "MultiParty"
library(Zelig)
# Load data from the GitHub site
url <- "https://raw.github.com/christophergandrud/amcData/master/MainData/amcData.csv"
main <- getURL(url)
main <- read.csv(textConnection(main))
main$SingleParty[main$govfrac > 0] <- "MultiParty"
main$SingleParty[main$govfrac == 1] <- "SingleParty"
M2 <- zelig(AMC ~ IMFProgram + SingleParty, model = "logit", data = main)
summary(M2)
M2 <- zelig(AMC ~ SingleParty, model = "logit", data = main)
summary(M2)
M2 <- zelig(AMC ~ SingleParty, model = "logit", data = main)
summary(M2)
main$SingleParty <- factor(main$SingleParty)
M2 <- zelig(AMC ~ SingleParty, model = "logit", data = main)
summary(M2)
M5 <- zelig(AMC ~ SingleParty, model = "logit", data = main)
main$SingleParty[main$govfrac > 0] <- "MultiParty"
main$SingleParty[main$govfrac == 0] <- "SingleParty"
summary(main$govfrac)
# Load data from the GitHub site
url <- "https://raw.github.com/christophergandrud/amcData/master/MainData/amcData.csv"
main <- getURL(url)
main <- read.csv(textConnection(main))
main$SingleParty[main$govfrac > 0] <- "MultiParty"
main$SingleParty[main$govfrac == 0] <- "SingleParty"
M5 <- zelig(AMC ~ SingleParty, model = "logit", data = main)
summary(M2)
summary(M5)
?logit
?glm
#########
# Make amcData Data Set
# Christopher Gandrud
# Updated 17 July 2012
#########
# Set working directory
setwd("/git_repositories/amcData/SourceCode/DataCreation/")
source("LV_Data_Clean.R")
setwd("/git_repositories/amcData/SourceCode/DataCreation/")
source("AddDPIVariables.R")
setwd("/git_repositories/amcData/SourceCode/DataCreation/")
source("AddUDSVariable.R")
setwd("/git_repositories/amcData/SourceCode/DataCreation/")
source("MergeCleaned.R")
#########
# Exploritory AMC Analysis
# Christopher Gandrud
# Updated 17 July 2012
#########
# Load required packages
library(RCurl)
library(ggplot2)
library(Zelig)
# Load data from the GitHub site
url <- "https://raw.github.com/christophergandrud/amcData/master/MainData/amcData.csv"
main <- getURL(url)
main <- read.csv(textConnection(main))
main$SingleParty[main$govfrac > 0] <- "MultiParty"
main$SingleParty[main$govfrac == 0] <- "SingleParty"
##### Basic Boxplots ####
qplot(AMC, SingleParty, geom = "boxplot", data = main) + theme_bw()
#### Exploratory Models ####
M1 <- zelig(AMC ~ IMFProgram, model = "logit", data = main)
M5 <- zelig(AMC ~ SingleParty, model = "logit", data = main)
M3 <- zelig(AMC ~ execrlc, model = "logit", data = main)
M4 <- zelig(AMC ~ PeakNPLs, model = "logit", data = main)
View(main)
qplot(AMC, SingleParty, geom = "point", data = main) + theme_bw()
qplot(AMC, SingleParty, geom = "jitter", data = main) + theme_bw()
qplot(AMC, IMFProgram, geom = "jitter", data = main) + theme_bw()
M4 <- zelig(AMC ~ PeakNPLs, model = "logit", data = main)
qplot(AMC, execrlc, geom = "jitter", data = main) + theme_bw()
summary(M3)
