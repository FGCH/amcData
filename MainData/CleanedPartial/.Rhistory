# .sum for summary
library(reshape)
### LS
# Extract and melt quantiles for marginal posterior distributions (not matched data set)
NL7.cat <- confint(NL7)
NL7.cat.sum <- as.data.frame(NL7.cat)
NL7.cat.sum$var <- rownames(NL7.cat.sum)
NL7.lower.molten <- melt(NL7.cat.sum, id = c("var"), measure.vars = c("2.5 %"))
NL7.lower.molten <- rename(NL7.lower.molten, c(value = "lower"))
NL7.lower.molten <- NL7.lower.molten[, -2]
NL7.upper.molten <- melt(NL7.cat.sum, id = c("var"), measure.vars = c("97.5 %"))
NL7.upper.molten <- rename(NL7.upper.molten, c(value = "upper"))
NL7.upper.molten <- NL7.upper.molten[, -2]
NL7.molten <- merge(NL7.lower.molten, NL7.upper.molten)
NL7.molten$match <- "Not Matched"
# Extract and melt quantiles for marginal posterior distributions (matched data set)
PL7.cat <- confint(PL7)
PL7.cat.sum <- as.data.frame(PL7.cat)
PL7.cat.sum$var <- rownames(PL7.cat.sum)
PL7.lower.molten <- melt(PL7.cat.sum, id = c("var"), measure.vars = c("2.5 %"))
PL7.lower.molten <- rename(PL7.lower.molten, c(value = "lower"))
PL7.lower.molten <- PL7.lower.molten[, -2]
PL7.upper.molten <- melt(PL7.cat.sum, id = c("var"), measure.vars = c("97.5 %"))
PL7.upper.molten <- rename(PL7.upper.molten, c(value = "upper"))
PL7.upper.molten <- PL7.upper.molten[, -2]
PL7.molten <- merge(PL7.lower.molten, PL7.upper.molten)
PL7.molten$match <- "Matched"
estimates.ls <- rbind(NL7.molten, PL7.molten)
estimates.ls$method <- "OLS"
#### Figures for normal.bayes Results Catapilar Plot ####
# .cat for catapilar graph
# .sum for summary
### Normal Bayes Models
# Extract and melt quantiles for marginal posterior distributions (not matched data set)
NB1.cat <- summary(NB1)
NB1.cat.sum <- as.data.frame(NB1.cat$summary)
NB1.cat.sum$var <- rownames(NB1.cat.sum)
NB1.lower.molten <- melt(NB1.cat.sum, id = c("var"), measure.vars = c("2.5%"))
NB1.lower.molten <- rename(NB1.lower.molten, c(value = "lower"))
NB1.lower.molten <- NB1.lower.molten[, -2]
NB1.upper.molten <- melt(NB1.cat.sum, id = c("var"), measure.vars = c("97.5%"))
NB1.upper.molten <- rename(NB1.upper.molten, c(value = "upper"))
NB1.upper.molten <- NB1.upper.molten[, -2]
NB1.molten <- merge(NB1.lower.molten, NB1.upper.molten)
NB1.molten$match <- "Not Matched"
# Extract and melt quantiles for marginal posterior distributions (matched data set)
PB1.cat <- summary(PB1)
PB1.cat.sum <- as.data.frame(PB1.cat$summary)
PB1.cat.sum$var <- rownames(PB1.cat.sum)
PB1.lower.molten <- melt(PB1.cat.sum, id = c("var"), measure.vars = c("2.5%"))
PB1.lower.molten <- rename(PB1.lower.molten, c(value = "lower"))
PB1.lower.molten <- PB1.lower.molten[, -2]
PB1.upper.molten <- melt(PB1.cat.sum, id = c("var"), measure.vars = c("97.5%"))
PB1.upper.molten <- rename(PB1.upper.molten, c(value = "upper"))
PB1.upper.molten <- PB1.upper.molten[, -2]
PB1.molten <- merge(PB1.lower.molten, PB1.upper.molten)
PB1.molten$match <- "Matched"
estimates.b <- rbind(NB1.molten, PB1.molten)
estimates.b$method <- "Normal Bayes"
estimates <- rbind(estimates.ls, estimates.b)
# Remove Intercept
estimates <- subset(estimates, var != c("(Intercept)"))
estimates <- subset(estimates, var != c("sigma2"))
##### Create comparison plot
cols <- c("#67A380", "#696969")
breaks <- c("pres_party", "house_dem_rep", "ExpenditureGDP", "recession", "DebtGDP", "time_to_election", "PotentialGDP", "DiscountRate2qChange", "GlobalModelAfter 1996", "senate_dem_rep")
break.labels <- c("Dem. President", "Prop. House Dem.", "Gov. Expenditure (% GDP)", "Recession", "Gov. Debt (% GDP)", "Quarters Until Election", "Potential GDP (%GDP)", "Discount Rate Change", "Global Model", "Prop. Senate Dem.")
est.plot <- ggplot(data = estimates, aes(x = reorder(var, lower), ymin = lower, ymax = upper, colour = match)) +
facet_grid(~ method) +
geom_linerange(size = 3, alpha = 0.6) +
scale_x_discrete(breaks = breaks, labels = break.labels) +
scale_y_continuous(breaks = c(-1, 0.0, 0.5), labels = c("-1", "0", "0.5")) +
scale_color_manual(values = cols, name = "") +
geom_hline(aes(intercept= 0), linetype = "dotted") +
ylab("\nCoefficient Estimate") + xlab("") +
coord_flip() +
theme_bw(base_size = 11)
print(est.plot)
library(devtools)
#### Figures for ls Results Catapilar Plot ####
# .cat for catapilar graph
# .sum for summary
library(reshape)
### LS
# Extract and melt quantiles for marginal posterior distributions (not matched data set)
NL7.cat <- confint(NL7)
NL7.cat.sum <- as.data.frame(NL7.cat)
NL7.cat.sum$var <- rownames(NL7.cat.sum)
NL7.lower.molten <- melt(NL7.cat.sum, id = c("var"), measure.vars = c("2.5 %"))
NL7.lower.molten <- rename(NL7.lower.molten, c(value = "lower"))
NL7.lower.molten <- NL7.lower.molten[, -2]
NL7.upper.molten <- melt(NL7.cat.sum, id = c("var"), measure.vars = c("97.5 %"))
NL7.upper.molten <- rename(NL7.upper.molten, c(value = "upper"))
NL7.upper.molten <- NL7.upper.molten[, -2]
NL7.molten <- merge(NL7.lower.molten, NL7.upper.molten)
NL7.molten$match <- "Not Matched"
# Extract and melt quantiles for marginal posterior distributions (matched data set)
PL7.cat <- confint(PL7)
PL7.cat.sum <- as.data.frame(PL7.cat)
PL7.cat.sum$var <- rownames(PL7.cat.sum)
PL7.lower.molten <- melt(PL7.cat.sum, id = c("var"), measure.vars = c("2.5 %"))
PL7.lower.molten <- rename(PL7.lower.molten, c(value = "lower"))
PL7.lower.molten <- PL7.lower.molten[, -2]
PL7.upper.molten <- melt(PL7.cat.sum, id = c("var"), measure.vars = c("97.5 %"))
PL7.upper.molten <- rename(PL7.upper.molten, c(value = "upper"))
PL7.upper.molten <- PL7.upper.molten[, -2]
PL7.molten <- merge(PL7.lower.molten, PL7.upper.molten)
PL7.molten$match <- "Matched"
estimates.ls <- rbind(NL7.molten, PL7.molten)
estimates.ls$method <- "OLS"
#### Figures for normal.bayes Results Catapilar Plot ####
# .cat for catapilar graph
# .sum for summary
### Normal Bayes Models
# Extract and melt quantiles for marginal posterior distributions (not matched data set)
NB1.cat <- summary(NB1)
NB1.cat.sum <- as.data.frame(NB1.cat$summary)
NB1.cat.sum$var <- rownames(NB1.cat.sum)
NB1.lower.molten <- melt(NB1.cat.sum, id = c("var"), measure.vars = c("2.5%"))
NB1.lower.molten <- rename(NB1.lower.molten, c(value = "lower"))
NB1.lower.molten <- NB1.lower.molten[, -2]
NB1.upper.molten <- melt(NB1.cat.sum, id = c("var"), measure.vars = c("97.5%"))
NB1.upper.molten <- rename(NB1.upper.molten, c(value = "upper"))
NB1.upper.molten <- NB1.upper.molten[, -2]
NB1.molten <- merge(NB1.lower.molten, NB1.upper.molten)
NB1.molten$match <- "Not Matched"
# Extract and melt quantiles for marginal posterior distributions (matched data set)
PB1.cat <- summary(PB1)
PB1.cat.sum <- as.data.frame(PB1.cat$summary)
PB1.cat.sum$var <- rownames(PB1.cat.sum)
PB1.lower.molten <- melt(PB1.cat.sum, id = c("var"), measure.vars = c("2.5%"))
PB1.lower.molten <- rename(PB1.lower.molten, c(value = "lower"))
PB1.lower.molten <- PB1.lower.molten[, -2]
PB1.upper.molten <- melt(PB1.cat.sum, id = c("var"), measure.vars = c("97.5%"))
PB1.upper.molten <- rename(PB1.upper.molten, c(value = "upper"))
PB1.upper.molten <- PB1.upper.molten[, -2]
PB1.molten <- merge(PB1.lower.molten, PB1.upper.molten)
PB1.molten$match <- "Matched"
estimates.b <- rbind(NB1.molten, PB1.molten)
estimates.b$method <- "Normal Bayes"
estimates <- rbind(estimates.ls, estimates.b)
# Remove Intercept
estimates <- subset(estimates, var != c("(Intercept)"))
estimates <- subset(estimates, var != c("sigma2"))
##### Create comparison plot
cols <- c("#67A380", "#696969")
breaks <- c("pres_party", "house_dem_rep", "ExpenditureGDP", "recession", "DebtGDP", "time_to_election", "PotentialGDP", "DiscountRate2qChange", "GlobalModelAfter 1996", "senate_dem_rep")
break.labels <- c("Dem. President", "Prop. House Dem.", "Gov. Expenditure (% GDP)", "Recession", "Gov. Debt (% GDP)", "Quarters Until Election", "Potential GDP (%GDP)", "Discount Rate Change", "Global Model", "Prop. Senate Dem.")
est.plot <- ggplot(data = estimates, aes(x = reorder(var, lower), ymin = lower, ymax = upper, colour = match)) +
facet_grid(~ method) +
geom_linerange(size = 3, alpha = 0.6) +
scale_x_discrete(breaks = breaks, labels = break.labels) +
scale_y_continuous(breaks = c(-1, 0.0, 0.5), labels = c("-1", "0", "0.5")) +
scale_color_manual(values = cols, name = "") +
geom_hline(aes(intercept= 0), linetype = "dotted") +
ylab("\nCoefficient Estimate") + xlab("") +
coord_flip() +
theme_bw(base_size = 11)
print(est.plot)
# Clean up data and create forecast error variable
cpi.data$pres_party_name <- factor(cpi.data$pres_party, label = c("Rep", "Dem"))
cpi.data$error.prop.deflator.q2 <-  (cpi.data$GB_CPI_QTR2 - cpi.data$deflator)/cpi.data$deflator
# Create FRB/Global Model Variable
cpi.data$GlobalModel[cpi.data$Quarter > 1995.4] <- "1"
cpi.data$GlobalModel[cpi.data$Quarter < 1996.1] <- "0"
cpi.data$GlobalModel <- factor(cpi.data$GlobalModel, labels = c("Before 1996", "After 1996"))
# Create Fed Chair variable
cpi.data$Chair[cpi.data$Quarter > 1987.3] <-  "Greenspan"
cpi.data$Chair[cpi.data$Quarter <= 1987.3] <- "Volcker"
cpi.data$Chair[cpi.data$Quarter <= 1979.3] <- "Miller"
cpi.data$Chair[cpi.data$Quarter <= 1978.1] <- "Burns"
cpi.data$Chair[cpi.data$Quarter <= 1970.1] <- "Martin"
cpi.data$Chair <- factor(cpi.data$Chair)
## Remove 2 quarters from Johnson presidency
cpi.data <- subset(cpi.data, president != "Johnson")
cpi.data$president <- as.factor(cpi.data$presTerm)
## Create graph
# Error region +/- 10 percent
rect.time <- data.frame(xmin = 1968, xmax = 2006, ymin = -0.1, ymax = 0.1)
# Partisan colours
partisan.colors = c("Rep" = "#C42B00", "Dem" = "#2259B3")
errors.time <- ggplot(cpi.data, aes(x = Quarter, y = error.prop.deflator.q2)) +
geom_point(aes(color = pres_party_name)) +
stat_smooth(method = "lm", aes(group = presTerm, color = pres_party_name, fill = pres_party_name)) +
geom_rect(data = rect.time, aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax), color = "grey20", alpha = 0.5, inherit.aes = FALSE) +
scale_color_manual(values = partisan.colors, name = "") +
scale_fill_manual(values = partisan.colors, name = "") +
xlab("") + ylab("Standardized Forecast Error") +
scale_x_continuous(limits=c(1968, 2006)) +
theme_bw() +
opts(axis.title.x = theme_text(size = 12, vjust = 0)) +
opts(axis.title.y = theme_text(angle = 90, size = 12, vjust = 0.3))
print(errors.time)
library(RCurl)
library(reshape2)
library(ggplot2)
### Load data
# Load data from GitHub
url <- "https://raw.github.com/christophergandrud/GreenBook/master/Data/GB_FRED_cpi.csv"
cpi.data <- getURL(url)
cpi.data <- read.csv(textConnection(cpi.data))
## Other data loading options
#cpi.data <- read.csv("/git_repositories/GreenBook/Data/GB_FRED_cpi.csv") # Load data locally from Christopher's computer
# cpi.data <- read.dta("http://dl.dropbox.com/u/12581470/code/Replicability_code/GreenBook/GB_FRED_cpi.dta") # Load data from Dropbox
### Melt data, i.e. reshape
cpi.abs <- melt(cpi.data, id = "Quarter", measure = c("GB_CPI_QTR2", "deflator"))
### Rename variables
cpi.abs$variable <- gsub("GB_CPI_QTR2", "Forecast", cpi.abs$variable)
cpi.abs$variable <- gsub("deflator", "Actual", cpi.abs$variable)
### Colours
absolute.colors <- c("Forecast" = "#B35B40", "Actual" = "#000000")
### Create line graph
absInflation <- qplot(Quarter, value, geom = "line", data = cpi.abs, color = variable, linetype = variable) +
xlab("") + ylab("Inflation") +
scale_color_manual(values = absolute.colors, name = "") +
scale_linetype(name = "") +
geom_vline(aes(xintercept = 1996), linetype = "dotted", colour = "grey50") +
annotate("text", x = 2001, y = 8.5, label = "FRB/Global", colour = "grey50") +
geom_vline(aes(xintercept = 1975), linetype = "dotted", colour = "grey50") +
annotate("text", x = 1978, y = 1.5, label = "SEM", colour = "grey50") +
theme_bw() +
opts(axis.title.x = theme_text(size = 12, vjust = 0))
print(absInflation)
# Clean up data and create forecast error variable
cpi.data$pres_party_name <- factor(cpi.data$pres_party, label = c("Rep", "Dem"))
cpi.data$error.prop.deflator.q2 <-  (cpi.data$GB_CPI_QTR2 - cpi.data$deflator)/cpi.data$deflator
# Create FRB/Global Model Variable
cpi.data$GlobalModel[cpi.data$Quarter > 1995.4] <- "1"
cpi.data$GlobalModel[cpi.data$Quarter < 1996.1] <- "0"
cpi.data$GlobalModel <- factor(cpi.data$GlobalModel, labels = c("Before 1996", "After 1996"))
# Create Fed Chair variable
cpi.data$Chair[cpi.data$Quarter > 1987.3] <-  "Greenspan"
cpi.data$Chair[cpi.data$Quarter <= 1987.3] <- "Volcker"
cpi.data$Chair[cpi.data$Quarter <= 1979.3] <- "Miller"
cpi.data$Chair[cpi.data$Quarter <= 1978.1] <- "Burns"
cpi.data$Chair[cpi.data$Quarter <= 1970.1] <- "Martin"
cpi.data$Chair <- factor(cpi.data$Chair)
## Remove 2 quarters from Johnson presidency
cpi.data <- subset(cpi.data, president != "Johnson")
cpi.data$president <- as.factor(cpi.data$presTerm)
## Create graph
# Error region +/- 10 percent
rect.time <- data.frame(xmin = 1968, xmax = 2006, ymin = -0.1, ymax = 0.1)
# Partisan colours
partisan.colors = c("Rep" = "#C42B00", "Dem" = "#2259B3")
errors.time <- ggplot(cpi.data, aes(x = Quarter, y = error.prop.deflator.q2)) +
geom_point(aes(color = pres_party_name)) +
stat_smooth(method = "lm", aes(group = presTerm, color = pres_party_name, fill = pres_party_name)) +
geom_rect(data = rect.time, aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax), color = "grey20", alpha = 0.5, inherit.aes = FALSE) +
scale_color_manual(values = partisan.colors, name = "") +
scale_fill_manual(values = partisan.colors, name = "") +
xlab("") + ylab("Standardized Forecast Error") +
scale_x_continuous(limits=c(1968, 2006)) +
theme_bw() +
opts(axis.title.x = theme_text(size = 12, vjust = 0)) +
opts(axis.title.y = theme_text(angle = 90, size = 12, vjust = 0.3))
print(errors.time)
library(devtools)
# Run main analysis source code
AnalysisURL <- "https://raw.github.com/christophergandrud/GreenBook/master/Analysis/MainAnalysis2.R"
source_url(AnalysisURL)
# Local
# source("/git_repositories/GreenBook/Analysis/MainAnalysis2.R")
# source("/git_repositories/GreenBook/Analysis/BasicAnalysisCoefPlots.R")
# Create plots
CoefPlotsURL <- "https://raw.github.com/christophergandrud/GreenBook/master/Analysis/BasicAnalysisCoefPlots.R"
source_url(CoefPlotsURL)
####################
# Greenbook MatchIt Analyses Coef Plots Compare
# Christopher Gandrud
# 27 July 2012
####################
#### Figures for ls Results Catapilar Plot ####
# .cat for catapilar graph
# .sum for summary
library(reshape)
### LS
# Extract and melt quantiles for marginal posterior distributions (not matched data set)
NL7.cat <- confint(NL7)
NL7.cat.sum <- as.data.frame(NL7.cat)
NL7.cat.sum$var <- rownames(NL7.cat.sum)
NL7.lower.molten <- melt(NL7.cat.sum, id = c("var"), measure.vars = c("2.5 %"))
NL7.lower.molten <- rename(NL7.lower.molten, c(value = "lower"))
NL7.lower.molten <- NL7.lower.molten[, -2]
NL7.upper.molten <- melt(NL7.cat.sum, id = c("var"), measure.vars = c("97.5 %"))
NL7.upper.molten <- rename(NL7.upper.molten, c(value = "upper"))
NL7.upper.molten <- NL7.upper.molten[, -2]
NL7.molten <- merge(NL7.lower.molten, NL7.upper.molten)
NL7.molten$match <- "Not Matched"
# Extract and melt quantiles for marginal posterior distributions (matched data set)
PL7.cat <- confint(PL7)
PL7.cat.sum <- as.data.frame(PL7.cat)
PL7.cat.sum$var <- rownames(PL7.cat.sum)
PL7.lower.molten <- melt(PL7.cat.sum, id = c("var"), measure.vars = c("2.5 %"))
PL7.lower.molten <- rename(PL7.lower.molten, c(value = "lower"))
PL7.lower.molten <- PL7.lower.molten[, -2]
PL7.upper.molten <- melt(PL7.cat.sum, id = c("var"), measure.vars = c("97.5 %"))
PL7.upper.molten <- rename(PL7.upper.molten, c(value = "upper"))
PL7.upper.molten <- PL7.upper.molten[, -2]
PL7.molten <- merge(PL7.lower.molten, PL7.upper.molten)
PL7.molten$match <- "Matched"
estimates.ls <- rbind(NL7.molten, PL7.molten)
estimates.ls$method <- "OLS"
#### Figures for normal.bayes Results Catapilar Plot ####
# .cat for catapilar graph
# .sum for summary
### Normal Bayes Models
# Extract and melt quantiles for marginal posterior distributions (not matched data set)
NB1.cat <- summary(NB1)
NB1.cat.sum <- as.data.frame(NB1.cat$summary)
NB1.cat.sum$var <- rownames(NB1.cat.sum)
NB1.lower.molten <- melt(NB1.cat.sum, id = c("var"), measure.vars = c("2.5%"))
NB1.lower.molten <- rename(NB1.lower.molten, c(value = "lower"))
NB1.lower.molten <- NB1.lower.molten[, -2]
NB1.upper.molten <- melt(NB1.cat.sum, id = c("var"), measure.vars = c("97.5%"))
NB1.upper.molten <- rename(NB1.upper.molten, c(value = "upper"))
NB1.upper.molten <- NB1.upper.molten[, -2]
NB1.molten <- merge(NB1.lower.molten, NB1.upper.molten)
NB1.molten$match <- "Not Matched"
# Extract and melt quantiles for marginal posterior distributions (matched data set)
PB1.cat <- summary(PB1)
PB1.cat.sum <- as.data.frame(PB1.cat$summary)
PB1.cat.sum$var <- rownames(PB1.cat.sum)
PB1.lower.molten <- melt(PB1.cat.sum, id = c("var"), measure.vars = c("2.5%"))
PB1.lower.molten <- rename(PB1.lower.molten, c(value = "lower"))
PB1.lower.molten <- PB1.lower.molten[, -2]
PB1.upper.molten <- melt(PB1.cat.sum, id = c("var"), measure.vars = c("97.5%"))
PB1.upper.molten <- rename(PB1.upper.molten, c(value = "upper"))
PB1.upper.molten <- PB1.upper.molten[, -2]
PB1.molten <- merge(PB1.lower.molten, PB1.upper.molten)
PB1.molten$match <- "Matched"
estimates.b <- rbind(NB1.molten, PB1.molten)
estimates.b$method <- "Normal Bayes"
estimates <- rbind(estimates.ls, estimates.b)
# Remove Intercept
estimates <- subset(estimates, var != c("(Intercept)"))
estimates <- subset(estimates, var != c("sigma2"))
##### Create comparison plot
cols <- c("#67A380", "#696969")
breaks <- c("pres_party", "house_dem_rep", "ExpenditureGDP", "recession", "DebtGDP", "time_to_election", "PotentialGDP", "DiscountRate2qChange", "GlobalModelAfter 1996", "senate_dem_rep")
break.labels <- c("Dem. President", "Prop. House Dem.", "Gov. Expenditure (% GDP)", "Recession", "Gov. Debt (% GDP)", "Quarters Until Election", "Potential GDP (%GDP)", "Discount Rate Change", "Global Model", "Prop. Senate Dem.")
est.plot <- ggplot(data = estimates, aes(x = reorder(var, lower), ymin = lower, ymax = upper, colour = match)) +
facet_grid(~ method) +
geom_linerange(size = 3, alpha = 0.6) +
scale_x_discrete(breaks = breaks, labels = break.labels) +
scale_y_continuous(breaks = c(-1, 0.0, 0.5), labels = c("-1", "0", "0.5")) +
scale_color_manual(values = cols, name = "") +
geom_hline(aes(intercept= 0), linetype = "dotted") +
ylab("\nCoefficient Estimate") + xlab("") +
coord_flip() +
theme_bw(base_size = 11)
print(est.plot)
####################
# Greenbook MatchIt Analyses Coef Plots Compare
# Christopher Gandrud
# 27 July 2012
####################
#### Figures for ls Results Catapilar Plot ####
# .cat for catapilar graph
# .sum for summary
library(reshape)
### LS
# Extract and melt quantiles for marginal posterior distributions (not matched data set)
NL7.cat <- confint(NL7)
NL7.cat.sum <- as.data.frame(NL7.cat)
NL7.cat.sum$var <- rownames(NL7.cat.sum)
NL7.lower.molten <- melt(NL7.cat.sum, id = c("var"), measure.vars = c("2.5 %"))
NL7.lower.molten <- rename(NL7.lower.molten, c(value = "lower"))
NL7.lower.molten <- NL7.lower.molten[, -2]
NL7.upper.molten <- melt(NL7.cat.sum, id = c("var"), measure.vars = c("97.5 %"))
NL7.upper.molten <- rename(NL7.upper.molten, c(value = "upper"))
NL7.upper.molten <- NL7.upper.molten[, -2]
NL7.molten <- merge(NL7.lower.molten, NL7.upper.molten)
NL7.molten$match <- "Not Matched"
# Extract and melt quantiles for marginal posterior distributions (matched data set)
PL7.cat <- confint(PL7)
PL7.cat.sum <- as.data.frame(PL7.cat)
PL7.cat.sum$var <- rownames(PL7.cat.sum)
PL7.lower.molten <- melt(PL7.cat.sum, id = c("var"), measure.vars = c("2.5 %"))
PL7.lower.molten <- rename(PL7.lower.molten, c(value = "lower"))
PL7.lower.molten <- PL7.lower.molten[, -2]
PL7.upper.molten <- melt(PL7.cat.sum, id = c("var"), measure.vars = c("97.5 %"))
PL7.upper.molten <- rename(PL7.upper.molten, c(value = "upper"))
PL7.upper.molten <- PL7.upper.molten[, -2]
PL7.molten <- merge(PL7.lower.molten, PL7.upper.molten)
PL7.molten$match <- "Matched"
estimates.ls <- rbind(NL7.molten, PL7.molten)
estimates.ls$method <- "OLS"
#### Figures for normal.bayes Results Catapilar Plot ####
# .cat for catapilar graph
# .sum for summary
### Normal Bayes Models
# Extract and melt quantiles for marginal posterior distributions (not matched data set)
NB1.cat <- summary(NB1)
NB1.cat.sum <- as.data.frame(NB1.cat$summary)
NB1.cat.sum$var <- rownames(NB1.cat.sum)
NB1.lower.molten <- melt(NB1.cat.sum, id = c("var"), measure.vars = c("2.5%"))
NB1.lower.molten <- rename(NB1.lower.molten, c(value = "lower"))
NB1.lower.molten <- NB1.lower.molten[, -2]
NB1.upper.molten <- melt(NB1.cat.sum, id = c("var"), measure.vars = c("97.5%"))
NB1.upper.molten <- rename(NB1.upper.molten, c(value = "upper"))
NB1.upper.molten <- NB1.upper.molten[, -2]
NB1.molten <- merge(NB1.lower.molten, NB1.upper.molten)
NB1.molten$match <- "Not Matched"
# Extract and melt quantiles for marginal posterior distributions (matched data set)
PB1.cat <- summary(PB1)
PB1.cat.sum <- as.data.frame(PB1.cat$summary)
PB1.cat.sum$var <- rownames(PB1.cat.sum)
PB1.lower.molten <- melt(PB1.cat.sum, id = c("var"), measure.vars = c("2.5%"))
PB1.lower.molten <- rename(PB1.lower.molten, c(value = "lower"))
PB1.lower.molten <- PB1.lower.molten[, -2]
PB1.upper.molten <- melt(PB1.cat.sum, id = c("var"), measure.vars = c("97.5%"))
PB1.upper.molten <- rename(PB1.upper.molten, c(value = "upper"))
PB1.upper.molten <- PB1.upper.molten[, -2]
PB1.molten <- merge(PB1.lower.molten, PB1.upper.molten)
PB1.molten$match <- "Matched"
estimates.b <- rbind(NB1.molten, PB1.molten)
estimates.b$method <- "Normal Bayes"
estimates <- rbind(estimates.ls, estimates.b)
# Remove Intercept
estimates <- subset(estimates, var != c("(Intercept)"))
estimates <- subset(estimates, var != c("sigma2"))
##### Create comparison plot
cols <- c("#67A380", "#696969")
breaks <- c("pres_party", "house_dem_rep", "ExpenditureGDP", "recession", "DebtGDP", "time_to_election", "PotentialGDP", "DiscountRate2qChange", "GlobalModelAfter 1996", "senate_dem_rep")
break.labels <- c("Dem. President", "Prop. House Dem.", "Gov. Expenditure (% GDP)", "Recession", "Gov. Debt (% GDP)", "Quarters Until Election", "Potential GDP (%GDP)", "Discount Rate Change", "Global Model", "Prop. Senate Dem.")
est.plot <- ggplot(data = estimates, aes(x = reorder(var, lower), ymin = lower, ymax = upper, colour = match)) +
facet_grid(~ method) +
geom_linerange(size = 3, alpha = 0.6) +
scale_x_discrete(breaks = breaks, labels = break.labels) +
#scale_y_continuous(breaks = c(-1, 0.0, 0.5), labels = c("-1", "0", "0.5")) +
scale_color_manual(values = cols, name = "") +
geom_hline(aes(intercept= 0), linetype = "dotted") +
ylab("\nCoefficient Estimate") + xlab("") +
coord_flip() +
theme_bw(base_size = 11)
print(est.plot)
library(apsrtable)
# Model names & Coefficient Names -- Use A for all non-mathced models
ModelNamesA <- c("A1", "A2", "A3", "A4", "A5", "A6", "A7", "A8", "A9", "A10", "A11")
CoefNamesA <- c("Intercept", "Recession", "Debt/GDP", "Expenditure/GDP", "Output Gap", "Discount Rate Change", "Qtr. to Election", "Election Period", "Pres. Party ID", "Senate Dem/Rep", "House Dem/Rep", "FRB/GlobalModel", "Pres Party ID*House", "Pres Party ID*Senate", "House*Senate", "Pres*House*Senate")
# Table of non-matched models with ls
apsrtable(NL1, NL2, NL3, NL4, NL5, NL6, NL7, NL8, NL9, NL10, NL11,
digits = 1, order = ,
Sweave = TRUE,
stars = "default",
model.names = ModelNamesA,
coef.names = CoefNamesA
)
NL8 <- zelig(error.prop.deflator.q2 ~ pres_party + recession + DebtGDP + time_to_election + Chair + ExpenditureGDP + PotentialGDP + DiscountRate2qChange, model = "ls", data = cpi.data, cite = FALSE)
summary(NL8)
NL8 <- zelig(error.prop.deflator.q2 ~ pres_party + recession + DebtGDP + time_to_election + Chair + ExpenditureGDP + PotentialGDP + DiscountRate2qChange, model = "ls", data = cpi.data, cite = FALSE)
summary(NL8)
library(apsrtable)
?apsrtable
shadow <- read.csv("~/Desktop/Jeff_27July2012/ShadowCap.csv")
shadow <- read.csv("~/Desktop/Jeff_27July2012/ShadowCap.csv")
cap <- read.csv("~/Desktop/Jeff_27July2012/Cap100.csv")
View(shadow)
View(cap)
shadow$imfcode <- countrycode(shadow$COUNTRY, from = "country.name", to = "imf")
shadow$imfcode <- countrycode(shadow$COUNTRY, to = "imf")
?countryname
?countrycode
shadow$imfcode <- countrycode(shadow$COUNTRY, origin = "country.name", destination = "imf")
View(shadow)
names(shadow)
shadow <- rename(shadow, c(YEAR = "year"))
names(shadow)
shadow <- shadow[, c("year", "shadow.cap", "imfcode")]
names(shadow)
names(shadow)
names(cap)
cap$imfcode <- countrycode(cap$WB.Code, origin = "wb", destination = "imf")
cap$imfcode <- countrycode(cap$WB.Code , origin = "wb", destination = "imf")
View(cap)
library(foreign)
###########
# Cap Merge for Jeff
# Christopher Gandrud
# Updated 27 July 2012
###########
library(countrycode)
library(reshape)
library(foreign)
shadow <- read.csv("~/Desktop/Jeff_27July2012/ShadowCap.csv")
cap <- read.csv("~/Desktop/Jeff_27July2012/Cap100.csv")
shadow$imfcode <- countrycode(shadow$COUNTRY, origin = "country.name", destination = "imf")
shadow <- rename(shadow, c(YEAR = "year"))
shadow <- shadow[, c("year","imfcode", "shadow.cap")]
cap$imfcode <- countrycode(cap$WB.Code , origin = "wb", destination = "imf")
cap <- rename(cap, c(Year = "year"))
cap <- cap[, c("year", "imfcode", "CAP100")]
###########
# Cap Merge for Jeff
# Christopher Gandrud
# Updated 27 July 2012
###########
library(countrycode)
library(reshape)
library(foreign)
shadow <- read.csv("~/Desktop/Jeff_27July2012/ShadowCap.csv")
cap <- read.csv("~/Desktop/Jeff_27July2012/Cap100.csv")
shadow$imfcode <- countrycode(shadow$COUNTRY, origin = "country.name", destination = "imf")
shadow <- rename(shadow, c(YEAR = "year"))
shadow <- shadow[, c("year","imfcode", "shadow.cap")]
cap$imfcode <- countrycode(cap$WB.Code , origin = "wb", destination = "imf")
cap <- rename(cap, c(Year = "year"))
cap <- cap[, c("year", "imfcode", "CAP100")]
merged <- merge(shadow, cap, all = TRUE)
View(merged)
write.dta(merged, file = "~/Desktop/Jeff_27July2012/shadowMerged.dta")
