Comb <- slide(Comb, 'wdiGrowth', GroupVar = 'country', slideBy = -2)
# Clean up
Comb <- DropNA(Comb, 'ContingentLiabilities')
#### Save
# write.dta(Comb, file = paste0(SD, 'BaseEUData_6May2014.dta'))
View(Comb)
View(wdiData)
wdiData <- WDI(indicator = c('FB.AST.NPER.ZS', 'NY.GDP.MKTP.KD.ZG'),
start = 2003, end = 2013)
View(wdiData)
Test = subset(wdiData, country = 'United Kingdom')
View(Test)
View(Test)
Test = subset(wdiData, country == 'United Kingdom')
View(Test)
View(Test)
wdiData$country[wdiData$country == 'GB'] <- 'UK'
################
# Create basic EU data set for simple test regressions
# Christopher Gandrud
# 6 May 2014
###############
# Load packages
library(DataCombine)
library(WDI)
library(foreign)
library(dplyr)
# Set directories
# Set data directory
DD <- '/git_repositories/CrisisDataIssues/data/'
# Save directory
SD <- '/git_repositories/CrisisDataIssues/data/misc/'
#### Eurostat ####
# Eurostat data was gathered from: http://epp.eurostat.ec.europa.eu/portal/page/portal/ government_finance_statistics/excessive_deficit/supplementary_tables_financial_turmoil. Accessed April 2014.
# The data was transformed using into the current format using:
# https://github.com/christophergandrud/CrisisDataIssues/blob/master/source/DataCreators/EU_CostsData.R
# Load data and clean
EUCosts <- read.csv(paste0(DD, 'Eurostat_CrisisCosts.csv'),
stringsAsFactors = FALSE)
# Load modified election timing variable
## Created using:
## https://github.com/christophergandrud/CrisisDataIssues/blob/master/source/DataCreators/YearsToElection.R
YearsLeft <- read.csv(paste0(DD, 'Elections.csv'), stringsAsFactors = FALSE)
Comb <- dMerge(EUCosts, YearsLeft, Var = c('country', 'year'), all.x = TRUE)
Comb$CollapseElect <- Comb$yrcurnt
Comb$CollapseElect[Comb$yrcurnt > 1] <- 3
Comb$CollapseElect <- factor(Comb$CollapseElect,
labels = c('Election Year', 'Elect. - 1',
'Other Years'))
# Remove Finland (only has one observation year)
Comb <- subset(Comb, country != 'FI')
# Remove Slovakia (only has two years)
Comb <- subset(Comb, country != 'SK')
# Find country standard deviations in liabilities
SDMean <- function(var){
Comb <- eval(parse(text = paste0('mutate(group_by(Comb, country), tempMean = mean(',
var,'))')))
Comb <- eval(parse(text = paste0('mutate(group_by(Comb, country), tempSD = sd(',
var,'))')))
Comb$tempMSub <- Comb[, var] - Comb[, 'tempMean']
Comb[, paste0(var, '_Standard')] <- Comb$tempMSub/Comb$tempSD
Comb <- VarDrop(Comb, c('tempMean', 'tempSD', 'tempMSub'))
return(Comb)
}
Comb <- SDMean('ContingentLiabilities')
Comb <- SDMean('GovLiabilities')
#### Add NPLs ####
wdiData <- WDI(indicator = c('FB.AST.NPER.ZS', 'NY.GDP.MKTP.KD.ZG'),
start = 2003, end = 2013)
wdiData <- wdiData[, c('iso2c', 'year', 'FB.AST.NPER.ZS',
'NY.GDP.MKTP.KD.ZG')]
names(wdiData) <- c('country', 'year', 'wdiNpl', 'wdiGrowth')
wdiData$country[wdiData$country == 'GB'] <- 'UK'
CountriesIncluded <- Comb$country
wdiData <- wdiData[wdiData$country %in% CountriesIncluded, ]
# Merbe with main data
Comb <- dMerge(Comb, wdiData, Var = c('country', 'year'), all = TRUE)
Comb <- Comb[order(Comb$country, Comb$year), ]
# Create lagged variables
Comb <- slide(Comb, 'wdiNpl', GroupVar = 'country', slideBy = -1)
Comb <- slide(Comb, 'wdiNpl', GroupVar = 'country', slideBy = -2)
Comb <- slide(Comb, 'wdiGrowth', GroupVar = 'country', slideBy = -1)
Comb <- slide(Comb, 'wdiGrowth', GroupVar = 'country', slideBy = -2)
# Clean up
Comb <- DropNA(Comb, 'ContingentLiabilities')
#### Save
# write.dta(Comb, file = paste0(SD, 'BaseEUData_6May2014.dta'))
View(Comb)
write.dta(Comb, file = paste0(SD, 'BaseEUData_6May2014_v2.dta'))
?slide
Comb <- slide(Comb, 'wdiNpl', GroupVar = 'country', slideBy = -1,
NewVar = 'NPL_Lag1')
View(Comb)
################
# Create basic EU data set for simple test regressions
# Christopher Gandrud
# 6 May 2014
###############
# Load packages
library(DataCombine)
library(WDI)
library(foreign)
library(dplyr)
# Set directories
# Set data directory
DD <- '/git_repositories/CrisisDataIssues/data/'
# Save directory
SD <- '/git_repositories/CrisisDataIssues/data/misc/'
#### Eurostat ####
# Eurostat data was gathered from: http://epp.eurostat.ec.europa.eu/portal/page/portal/ government_finance_statistics/excessive_deficit/supplementary_tables_financial_turmoil. Accessed April 2014.
# The data was transformed using into the current format using:
# https://github.com/christophergandrud/CrisisDataIssues/blob/master/source/DataCreators/EU_CostsData.R
# Load data and clean
EUCosts <- read.csv(paste0(DD, 'Eurostat_CrisisCosts.csv'),
stringsAsFactors = FALSE)
# Load modified election timing variable
## Created using:
## https://github.com/christophergandrud/CrisisDataIssues/blob/master/source/DataCreators/YearsToElection.R
YearsLeft <- read.csv(paste0(DD, 'Elections.csv'), stringsAsFactors = FALSE)
Comb <- dMerge(EUCosts, YearsLeft, Var = c('country', 'year'), all.x = TRUE)
Comb$CollapseElect <- Comb$yrcurnt
Comb$CollapseElect[Comb$yrcurnt > 1] <- 3
Comb$CollapseElect <- factor(Comb$CollapseElect,
labels = c('Election Year', 'Elect. - 1',
'Other Years'))
# Remove Finland (only has one observation year)
Comb <- subset(Comb, country != 'FI')
# Remove Slovakia (only has two years)
Comb <- subset(Comb, country != 'SK')
# Find country standard deviations in liabilities
SDMean <- function(var){
Comb <- eval(parse(text = paste0('mutate(group_by(Comb, country), tempMean = mean(',
var,'))')))
Comb <- eval(parse(text = paste0('mutate(group_by(Comb, country), tempSD = sd(',
var,'))')))
Comb$tempMSub <- Comb[, var] - Comb[, 'tempMean']
Comb[, paste0(var, '_Standard')] <- Comb$tempMSub/Comb$tempSD
Comb <- VarDrop(Comb, c('tempMean', 'tempSD', 'tempMSub'))
return(Comb)
}
Comb <- SDMean('ContingentLiabilities')
Comb <- SDMean('GovLiabilities')
#### Add NPLs ####
wdiData <- WDI(indicator = c('FB.AST.NPER.ZS', 'NY.GDP.MKTP.KD.ZG'),
start = 2003, end = 2013)
wdiData <- wdiData[, c('iso2c', 'year', 'FB.AST.NPER.ZS',
'NY.GDP.MKTP.KD.ZG')]
names(wdiData) <- c('country', 'year', 'wdiNpl', 'wdiGrowth')
wdiData$country[wdiData$country == 'GB'] <- 'UK'
CountriesIncluded <- Comb$country
wdiData <- wdiData[wdiData$country %in% CountriesIncluded, ]
# Merbe with main data
Comb <- dMerge(Comb, wdiData, Var = c('country', 'year'), all = TRUE)
Comb <- Comb[order(Comb$country, Comb$year), ]
# Create lagged variables
Comb <- slide(Comb, 'wdiNpl', GroupVar = 'country', slideBy = -1,
NewVar = 'NPL_Lag1')
Comb <- slide(Comb, 'wdiNpl', GroupVar = 'country', slideBy = -2,
NewVar = 'NPL_Lag2')
Comb <- slide(Comb, 'wdiGrowth', GroupVar = 'country', slideBy = -1,
NewVar = 'growth_Lag1')
Comb <- slide(Comb, 'wdiGrowth', GroupVar = 'country', slideBy = -2,
NewVar = 'growth_Lag2')
# Clean up
Comb <- DropNA(Comb, 'ContingentLiabilities')
#### Save
# write.dta(Comb, file = paste0(SD, 'BaseEUData_6May2014_v2.dta'))
View(Comb)
write.dta(Comb, file = paste0(SD, 'BaseEUData_6May2014_v2.dta'))
################
# Create basic EU data set for simple test regressions
# Christopher Gandrud
# 6 May 2014
###############
# Load packages
library(DataCombine)
library(WDI)
library(foreign)
library(dplyr)
# Set directories
# Set data directory
DD <- '/git_repositories/CrisisDataIssues/data/'
# Save directory
SD <- '/git_repositories/CrisisDataIssues/data/misc/'
#### Eurostat ####
# Eurostat data was gathered from: http://epp.eurostat.ec.europa.eu/portal/page/portal/ government_finance_statistics/excessive_deficit/supplementary_tables_financial_turmoil. Accessed April 2014.
# The data was transformed using into the current format using:
# https://github.com/christophergandrud/CrisisDataIssues/blob/master/source/DataCreators/EU_CostsData.R
# Load data and clean
EUCosts <- read.csv(paste0(DD, 'Eurostat_CrisisCosts.csv'),
stringsAsFactors = FALSE)
# Load modified election timing variable
## Created using:
## https://github.com/christophergandrud/CrisisDataIssues/blob/master/source/DataCreators/YearsToElection.R
YearsLeft <- read.csv(paste0(DD, 'Elections.csv'), stringsAsFactors = FALSE)
Comb <- dMerge(EUCosts, YearsLeft, Var = c('country', 'year'), all.x = TRUE)
Comb$CollapseElect <- Comb$yrcurnt
Comb$CollapseElect[Comb$yrcurnt > 1] <- 3
Comb$CollapseElect <- factor(Comb$CollapseElect,
labels = c('Election Year', 'Elect. - 1',
'Other Years'))
# Remove Finland (only has one observation year)
Comb <- subset(Comb, country != 'FI')
# Remove Slovakia (only has two years)
Comb <- subset(Comb, country != 'SK')
# Find country standard deviations in liabilities
SDMean <- function(var){
Comb <- eval(parse(text = paste0('mutate(group_by(Comb, country), tempMean = mean(',
var,'))')))
Comb <- eval(parse(text = paste0('mutate(group_by(Comb, country), tempSD = sd(',
var,'))')))
Comb$tempMSub <- Comb[, var] - Comb[, 'tempMean']
Comb[, paste0(var, '_Standard')] <- Comb$tempMSub/Comb$tempSD
Comb <- VarDrop(Comb, c('tempMean', 'tempSD', 'tempMSub'))
return(Comb)
}
Comb <- SDMean('ContingentLiabilities')
Comb <- SDMean('GovLiabilities')
#### Add NPLs ####
wdiData <- WDI(indicator = c('FB.AST.NPER.ZS', 'NY.GDP.MKTP.KD.ZG'),
start = 2003, end = 2013)
wdiData <- wdiData[, c('iso2c', 'year', 'FB.AST.NPER.ZS',
'NY.GDP.MKTP.KD.ZG')]
names(wdiData) <- c('country', 'year', 'wdiNpl', 'wdiGrowth')
wdiData$country[wdiData$country == 'GB'] <- 'UK'
CountriesIncluded <- Comb$country
wdiData <- wdiData[wdiData$country %in% CountriesIncluded, ]
# Merbe with main data
Comb <- dMerge(Comb, wdiData, Var = c('country', 'year'), all = TRUE)
Comb <- Comb[order(Comb$country, Comb$year), ]
# Create lagged variables
Comb <- slide(Comb, 'wdiNpl', GroupVar = 'country', slideBy = -1,
NewVar = 'NPL_Lag1')
Comb <- slide(Comb, 'wdiNpl', GroupVar = 'country', slideBy = -2,
NewVar = 'NPL_Lag2')
Comb <- slide(Comb, 'wdiGrowth', GroupVar = 'country', slideBy = -1,
NewVar = 'growth_Lag1')
Comb <- slide(Comb, 'wdiGrowth', GroupVar = 'country', slideBy = -2,
NewVar = 'growth_Lag2')
# Clean up
Comb <- DropNA(Comb, 'ContingentLiabilities')
#### Save
# write.dta(Comb, file = paste0(SD, 'BaseEUData_6May2014_v2.dta'))
ggplot(Comb, aes(wdiNpl)) +
geom_density() +
facet_grid(. ~ year) +
theme_linedraw()
library(ggplot2)
ggplot(Comb, aes(wdiNpl)) +
geom_density() +
facet_grid(. ~ year) +
theme_linedraw()
ggplot(Comb, aes(wdiGrowth)) +
geom_density() +
facet_grid(. ~ year) +
theme_linedraw()
ggplot(Comb, aes(wdiGrowth_1, ContingentLiabilities_Standard, group = country)) +
geom_point(aes(color = country)) +
stat_smooth(se = FALSE, method = 'lm', aes(color = country)) +
theme_linedraw()
ggplot(Comb, aes(growth_Lag1, ContingentLiabilities_Standard, group = country)) +
geom_point(aes(color = country)) +
stat_smooth(se = FALSE, method = 'lm', aes(color = country)) +
theme_linedraw()
ggplot(Comb, aes(growth_Lag1, ContingentLiabilities_Standard, group = country)) +
geom_point(aes(color = country)) +
theme_linedraw()
View(Comb)
View(Comb)
################
# Create basic EU data set for simple test regressions
# Christopher Gandrud
# 6 May 2014
###############
# Load packages
library(DataCombine)
library(WDI)
library(foreign)
library(dplyr)
# Set directories
# Set data directory
DD <- '/git_repositories/CrisisDataIssues/data/'
# Save directory
SD <- '/git_repositories/CrisisDataIssues/data/misc/'
#### Eurostat ####
# Eurostat data was gathered from: http://epp.eurostat.ec.europa.eu/portal/page/portal/ government_finance_statistics/excessive_deficit/supplementary_tables_financial_turmoil. Accessed April 2014.
# The data was transformed using into the current format using:
# https://github.com/christophergandrud/CrisisDataIssues/blob/master/source/DataCreators/EU_CostsData.R
# Load data and clean
EUCosts <- read.csv(paste0(DD, 'Eurostat_CrisisCosts.csv'),
stringsAsFactors = FALSE)
# Load modified election timing variable
## Created using:
## https://github.com/christophergandrud/CrisisDataIssues/blob/master/source/DataCreators/YearsToElection.R
YearsLeft <- read.csv(paste0(DD, 'Elections.csv'), stringsAsFactors = FALSE)
Comb <- dMerge(EUCosts, YearsLeft, Var = c('country', 'year'), all.x = TRUE)
Comb$CollapseElect <- Comb$yrcurnt
Comb$CollapseElect[Comb$yrcurnt > 1] <- 3
Comb$CollapseElect <- factor(Comb$CollapseElect,
labels = c('Election Year', 'Elect. - 1',
'Other Years'))
# Remove Finland (only has one observation year)
Comb <- subset(Comb, country != 'FI')
# Remove Slovakia (only has two years)
Comb <- subset(Comb, country != 'SK')
View(Comb)
Comb <- DropNA(Comb, 'ContingentLiabilities')
# Find country standard deviations in liabilities
SDMean <- function(var){
Comb <- eval(parse(text = paste0('mutate(group_by(Comb, country), tempMean = mean(',
var,'))')))
Comb <- eval(parse(text = paste0('mutate(group_by(Comb, country), tempSD = sd(',
var,'))')))
Comb$tempMSub <- Comb[, var] - Comb[, 'tempMean']
Comb[, paste0(var, '_Standard')] <- Comb$tempMSub/Comb$tempSD
Comb <- VarDrop(Comb, c('tempMean', 'tempSD', 'tempMSub'))
return(Comb)
}
Comb <- SDMean('ContingentLiabilities')
View(Comb)
Comb <- SDMean('GovLiabilities')
View(Comb)
#### Add NPLs ####
wdiData <- WDI(indicator = c('FB.AST.NPER.ZS', 'NY.GDP.MKTP.KD.ZG'),
start = 2003, end = 2013)
wdiData <- wdiData[, c('iso2c', 'year', 'FB.AST.NPER.ZS',
'NY.GDP.MKTP.KD.ZG')]
names(wdiData) <- c('country', 'year', 'wdiNpl', 'wdiGrowth')
wdiData$country[wdiData$country == 'GB'] <- 'UK'
CountriesIncluded <- Comb$country
wdiData <- wdiData[wdiData$country %in% CountriesIncluded, ]
# Merbe with main data
Comb <- dMerge(Comb, wdiData, Var = c('country', 'year'), all = TRUE)
Comb <- Comb[order(Comb$country, Comb$year), ]
# Create lagged variables
Comb <- slide(Comb, 'wdiNpl', GroupVar = 'country', slideBy = -1,
NewVar = 'NPL_Lag1')
Comb <- slide(Comb, 'wdiNpl', GroupVar = 'country', slideBy = -2,
NewVar = 'NPL_Lag2')
Comb <- slide(Comb, 'wdiGrowth', GroupVar = 'country', slideBy = -1,
NewVar = 'growth_Lag1')
Comb <- slide(Comb, 'wdiGrowth', GroupVar = 'country', slideBy = -2,
NewVar = 'growth_Lag2')
# Clean up
Comb <- DropNA(Comb, 'ContingentLiabilities')
View(Comb)
write.dta(Comb, file = paste0(SD, 'BaseEUData_6May2014_v2.dta'))
write.dta(Comb, file = paste0(SD, 'BaseEUData_6May2014_v3.dta'))
################
# Create basic EU data set for simple test regressions
# Christopher Gandrud
# 6 May 2014
###############
# Load packages
library(DataCombine)
library(WDI)
library(foreign)
library(dplyr)
# Set directories
# Set data directory
DD <- '/git_repositories/CrisisDataIssues/data/'
# Save directory
SD <- '/git_repositories/CrisisDataIssues/data/misc/'
#### Eurostat ####
# Eurostat data was gathered from: http://epp.eurostat.ec.europa.eu/portal/page/portal/ government_finance_statistics/excessive_deficit/supplementary_tables_financial_turmoil. Accessed April 2014.
# The data was transformed using into the current format using:
# https://github.com/christophergandrud/CrisisDataIssues/blob/master/source/DataCreators/EU_CostsData.R
# Load data and clean
EUCosts <- read.csv(paste0(DD, 'Eurostat_CrisisCosts.csv'),
stringsAsFactors = FALSE)
# Load modified election timing variable
## Created using:
## https://github.com/christophergandrud/CrisisDataIssues/blob/master/source/DataCreators/YearsToElection.R
YearsLeft <- read.csv(paste0(DD, 'Elections.csv'), stringsAsFactors = FALSE)
Comb <- dMerge(EUCosts, YearsLeft, Var = c('country', 'year'), all.x = TRUE)
Comb$CollapseElect <- Comb$yrcurnt
Comb$CollapseElect[Comb$yrcurnt > 1] <- 3
Comb$CollapseElect <- factor(Comb$CollapseElect,
labels = c('Election Year', 'Elect. - 1',
'Other Years'))
# Remove Finland (only has one observation year)
Comb <- subset(Comb, country != 'FI')
# Remove Slovakia (only has two years)
Comb <- subset(Comb, country != 'SK')
Comb <- DropNA(Comb, 'ContingentLiabilities')
# Find country standard deviations in liabilities
SDMean <- function(var){
Comb <- eval(parse(text = paste0('mutate(group_by(Comb, country), tempMean = mean(',
var,'))')))
Comb <- eval(parse(text = paste0('mutate(group_by(Comb, country), tempSD = sd(',
var,'))')))
Comb$tempMSub <- Comb[, var] - Comb[, 'tempMean']
Comb[, paste0(var, '_Standard')] <- Comb$tempMSub/Comb$tempSD
Comb <- VarDrop(Comb, c('tempMean', 'tempSD', 'tempMSub'))
return(Comb)
}
Comb <- SDMean('ContingentLiabilities')
Comb <- SDMean('GovLiabilities')
#### Add NPLs ####
wdiData <- WDI(indicator = c('FB.AST.NPER.ZS', 'NY.GDP.MKTP.KD.ZG'),
start = 2003, end = 2013)
wdiData <- wdiData[, c('iso2c', 'year', 'FB.AST.NPER.ZS',
'NY.GDP.MKTP.KD.ZG')]
names(wdiData) <- c('country', 'year', 'wdiNpl', 'wdiGrowth')
wdiData$country[wdiData$country == 'GB'] <- 'UK'
CountriesIncluded <- Comb$country
wdiData <- wdiData[wdiData$country %in% CountriesIncluded, ]
# Merbe with main data
Comb <- dMerge(Comb, wdiData, Var = c('country', 'year'), all = TRUE)
Comb <- Comb[order(Comb$country, Comb$year), ]
# Create lagged variables
Comb <- slide(Comb, 'wdiNpl', GroupVar = 'country', slideBy = -1,
NewVar = 'NPL_Lag1')
Comb <- slide(Comb, 'wdiNpl', GroupVar = 'country', slideBy = -2,
NewVar = 'NPL_Lag2')
Comb <- slide(Comb, 'wdiGrowth', GroupVar = 'country', slideBy = -1,
NewVar = 'growth_Lag1')
Comb <- slide(Comb, 'wdiGrowth', GroupVar = 'country', slideBy = -2,
NewVar = 'growth_Lag2')
# Clean up
Comb <- DropNA(Comb, 'ContingentLiabilities')
#### Save
# write.dta(Comb, file = paste0(SD, 'BaseEUData_6May2014_v3.dta'))
library(ggplot2)
library(Zelig)
ggplot(Comb, aes(wdiNpl)) +
geom_density() +
facet_grid(. ~ year) +
theme_linedraw()
ggplot(Comb, aes(wdiGrowth)) +
geom_density() +
facet_grid(. ~ year) +
theme_linedraw()
ggplot(Comb, aes(growth_Lag1, ContingentLiabilities_Standard, group = country)) +
geom_point(aes(color = country)) +
stat_smooth(se = FALSE, method = 'lm', aes(color = country)) +
theme_linedraw()
ggplot(Comb, aes(growth_Lag2, ContingentLiabilities_Standard, group = country)) +
geom_point(aes(color = country)) +
stat_smooth(se = FALSE, method = 'lm', aes(color = country)) +
theme_linedraw()
ggplot(Comb, aes(growth_Lag1, ContingentLiabilities_Standard, group = country)) +
geom_point(aes(color = country)) +
stat_smooth(se = FALSE, method = 'lm', aes(color = country)) +
theme_linedraw()
ggplot(Comb, aes(wdiNpl_2, GovLiabilities_Standard, group = country, color = country)) +
geom_point() +
stat_smooth(se = FALSE, method = 'lm', aes(color = country)) +
theme_linedraw()
ggplot(Comb, aes(NPL_Lag1, GovLiabilities_Standard, group = country, color = country)) +
geom_point() +
stat_smooth(se = FALSE, method = 'lm', aes(color = country)) +
theme_linedraw()
ggplot(Comb, aes(NPL_Lag1, ContingentLiabilities_Standard, group = country)) +
geom_point(aes(color = country)) +
stat_smooth(se = FALSE, method = 'lm', aes(color = country)) +
theme_linedraw()
ggplot(Comb, aes(ContingentLiabilities_Standard, group = as.factor(year),
color = as.factor(year))) +
geom_histogram(aes(fill = as.factor(year)), alpha = 0.2) +
geom_density(alpha = 0.5) +
facet_grid(CollapseElect ~ .) +
#scale_y_continuous(breaks = c(0, 0.3)) +
geom_vline(xintercept = 0) +
xlab('\n Contingent Liabilities') + #ylab('Density\n') +
theme_bw(base_size = 12)
shiny::runGitHub('d3ShinyExample', 'christophergandrud')
shiny::runGitHub('d3ShinyExample', 'christophergandrud')
#############
# Fill in holes from WDI (gathered with Clean7.R)
# Christopher Gandrud
# 12 May 2014
#############
# Load packages
library(countrycode)
library(xtable)
library(DataCombine)
# Load data created from Clean7.R
WDIData <- read.csv("/git_repositories/amcData/MainData/CleanedPartial/WDIData.csv")
#### Transform variables as percentage of GDP ####
# Percent GDP creation function
PerGDP <- function(x){
(x/WDIData$GDPCurrentUSD) * 100
}
# Assume IMFCredits variable is complete, i.e. NAs are actually 0
WDIData$IMFCredits[is.na(WDIData$IMFCredits)] <- 0
WDIData$IMFCreditsGDP <- PerGDP(WDIData$IMFCredits)
WDIData$PortfolioEquityGDP <- PerGDP(WDIData$PortfolioEquity)
WDIData$ShortExternDebtAllGDP <- PerGDP(WDIData$ShortExternDebtAll)
WDIData$ExternPrivateDebtGDP <- PerGDP(WDIData$ExternPrivateDebt)
WDIData$ExternPublicDebtGDP <- PerGDP(WDIData$ExternPublicDebt)
WDIData$ExternDebtTotalGDP <- PerGDP(WDIData$ExternDebtTotal)
WDIData$TotalReservesGDP <- PerGDP(WDIData$TotalReserves)
#### Merge with Eurostat Data for Government Debt/Surplus ####
# Data downloaded from: http://epp.eurostat.ec.europa.eu/portal/page/portal/statistics/search_database
# Variable Name: Government Debt/Surplus
setwd("/git_repositories/amcData/BaseFiles/FillForWDI/")
# Load data
EuroDebtSur <- read.csv("gov_dd_edpt1_1_Data.csv")
# Clean up variable names
EuroDebtSur <- EuroDebtSur[, c(1, 2, 6)]
EuroDebtSur <- plyr::rename(EuroDebtSur, c("TIME" = "year",
"GEO" = "country",
"Value" = "CashSurplusDeficit"))
EuroDebtSur$CashSurplusDeficit[EuroDebtSur$CashSurplusDeficit == ":"] <- NA
EuroDebtSur$CashSurplusDeficit <- as.character(EuroDebtSur$CashSurplusDeficit)
EuroDebtSur$CashSurplusDeficit <- as.numeric(EuroDebtSur$CashSurplusDeficit)
EuroDebtSur$iso2c <- countrycode(EuroDebtSur$country, "country.name", "iso2c")
EuroDebtSur <- subset(EuroDebtSur, iso2c != "RE")
EuroDebtSur <- EuroDebtSur[, c(1, 3, 4)]
WDIComb <- FillIn(WDIData, EuroDebtSur, Var1 = "CashSurplusDeficit"
)
