## leg <- subset(leg.raw, legislature == 1)
## Only Countries with Elected Legislatures
#dem <- subset(leg.raw, elect_legislature == 1)
dem <- subset(leg.raw, liec > 5)
## Only before 2010
dem <- subset(dem, year < 2010)
## Only Countries with Elected Legislatures after 1989 (new sample 199)
dNew <- subset(dem, year > 1989)
library(Zelig)
dNComp <- dNew[complete.cases(dNew["WomenInParl"]),]
D1 <- zelig(violence ~ HighProp + maj + DemAge, model = "relogit", data = dNew, tau = 71/3376, robust = list(method = "weave"), cite = FALSE)
summary(D1)
D1 <- zelig(violence ~ WomenInParl + HighProp + maj + DemAge, model = "relogit", data = dNew, tau = 71/3376, robust = list(method = "weave"), cite = FALSE)
summary(D1)
D1 <- zelig(violence ~ WomenInParl, model = "relogit", data = dNew, tau = 71/3376, robust = list(method = "weave"), cite = FALSE)
summary(D1)
D1 <- zelig(violence ~ WomenInParl + HighProp + maj + DemAge, model = "relogit", data = dem, tau = 71/3376, robust = list(method = "weave"), cite = FALSE)
summary(D1)
library(ggplot2)
ggplot(dem, aes(disproportionality, WomenInParl, colour = violence)) + geom_point() + theme_bw()
Test <- subset(dem, WomenInParl < 0)
View(Test)
women <- WDI(indicator = "SG.GEN.PARL.ZS", start = 1997, extra = FALSE)
women <- women[, c("iso2c", "year", "SG.GEN.PARL.ZS")]
names(women) <- c("iso2c", "year", "WomenInParl")
# Data from before 1997 from ICPSR: http://www.icpsr.umich.edu/icpsrweb/ICPSR/studies/24340
library(foreign)
library(reshape2)
library(countrycode)
womenOld <- read.dta("~/Dropbox/Parliamentary Brawls/ICPSR_24340/DS0001/24340-0001-Data.dta")
womenOld <- womenOld[, 5:64]
moltenWomen <- melt(womenOld, id.vars = "COUNTRYN")
moltenWomen$variable <- as.numeric(gsub("P", "", moltenWomen$variable))
names(moltenWomen) <- c("country", "year", "WomenInParl")
moltenWomen <- moltenWomen[order(moltenWomen$country, moltenWomen$year), ]
moltenWomen$iso2c <- countrycode(moltenWomen$country, origin = "country.name", destination = "iso2c")
moltenWomen <- moltenWomen[, c("iso2c", "year", "WomenInParl")]
moltenWomen <- subset(moltenWomen, year < 1997)
moltenWomen$WomenInParl[moltenWomen$WomenInParl < 0] <- "NA"
range(molteWomen$WomenInParl)
range(moltenWomen$WomenInParl)
range(moltenWomen$WomenInParl, rm.na = TRUE)
View(moltenWomen)
?range
range(moltenWomen$WomenInParl, na.rm = TRUE)
womenOld <- read.dta("~/Dropbox/Parliamentary Brawls/ICPSR_24340/DS0001/24340-0001-Data.dta")
womenOld <- womenOld[, 5:64]
moltenWomen <- melt(womenOld, id.vars = "COUNTRYN")
moltenWomen$variable <- as.numeric(gsub("P", "", moltenWomen$variable))
names(moltenWomen) <- c("country", "year", "WomenInParl")
moltenWomen <- moltenWomen[order(moltenWomen$country, moltenWomen$year), ]
moltenWomen$iso2c <- countrycode(moltenWomen$country, origin = "country.name", destination = "iso2c")
moltenWomen <- moltenWomen[, c("iso2c", "year", "WomenInParl")]
moltenWomen <- subset(moltenWomen, year < 1997)
moltenWomen$WomenInParl[moltenWomen$WomenInParl < 0] <- NA
range(moltenWomen$WomenInParl, na.rm = TRUE)
WomenComb <- rbind(women, moltenWomen)
WomenComb <- WomenComb[order(WomenComb$iso2c, WomenComb$year), ]
View(WomenComb)
leg.raw <- read.csv("/git_repositories/LegislativeViolence/Data/LegViolenceMain.csv")
names(leg.raw)
leg.raw <- leg.raw[, -155]
names(leg.raw)
leg <- merge(leg.raw, WomenComb, by = c("iso2c", "year"), all.x = TRUE)
write.csv(leg, "/git_repositories/LegislativeViolence/Data/LegViolenceMain.csv",
row.names = FALSE)
leg.raw <- read.csv("/git_repositories/LegislativeViolence/Data/LegViolenceMain.csv")
## Keep variables of interest
vars <- c("country", "year", "violence", "system", "DemAge", "maj", "MajCat", "govfrac", "singleParty", "pr", "tenshort", "UDS", "polity2", "ethnicAlesina", "CWtrust", "higherTrust", "CWsurvSelfExpr", "legislature", "elect_legislature", "disproportionality", "gini", "GDPperCapita", "enps", "enpv", "federal", "immunity", "liec", "UNMurderRate", "WomenInParl")
leg.raw <- leg.raw[vars]
## Clean violence data for 2009
leg.raw$violence[is.na(leg.raw$violence)] <- 0
## Label MajCat factor categories
leg.raw$MajCat <- factor(leg.raw$MajCat, labels = c("Minority", "Regular Maj.", "Strong Maj."))
## Transform GDP/capita to thousands of USD
leg.raw$GDPperCapita <- leg.raw$GDPperCapita/1000
## Create disproportionality threshold variable where 1 < 6
leg.raw$HighProp[leg.raw$disproportionality < 6] <- 1
leg.raw$HighProp[leg.raw$disproportionality >= 6] <- 0
## Create disproportionality threshold variable where 1 < 3
leg.raw$VeryHighProp[leg.raw$disproportionality < 4] <- 1
leg.raw$VeryHighProp[leg.raw$disproportionality >= 4] <- 0
## Transform majority variable from a proportion to a percentage
leg.raw$maj = leg.raw$maj*100
## Change the system variable's reference category to Parliamentary
leg.raw$system <- relevel(leg.raw$system, ref = "Parliamentary")
## Only Countries with Legislatures
## leg <- subset(leg.raw, legislature == 1)
## Only Countries with Elected Legislatures
#dem <- subset(leg.raw, elect_legislature == 1)
dem <- subset(leg.raw, liec > 5)
## Only before 2010
dem <- subset(dem, year < 2010)
## Only Countries with Elected Legislatures after 1989 (new sample 199)
dNew <- subset(dem, year > 1989)
library(Zelig)
dNComp <- dNew[complete.cases(dNew["WomenInParl"]),]
dNComp$logWomen <- log(dNComp$WomenInParl + 0.1)
dNComp$logDis <- log(dNComp$disproportionality + 0.1)
D1 <- zelig(violence ~ WomenInParl + HighProp + maj + DemAge, model = "relogit", data = dem, tau = 71/3376, robust = list(method = "weave"), cite = FALSE)
summary(D1)
library(ggplot2)
ggplot(dem, aes(disproportionality, WomenInParl, colour = violence)) + geom_point() + theme_bw()
ggplot(dem, aes(disproportionality, WomenInParl, colour = factor(violence))) + geom_point() + theme_bw()
ggplot(dem, aes(disproportionality, WomenInParl, colour = factor(violence))) +
geom_point() +
scale_colour_manual("gray", "red") +
theme_bw()
scale_colour_manual(c("gray", "red")) +
)))
ggplot(dem, aes(disproportionality, WomenInParl, colour = factor(violence))) +
geom_point() +
scale_colour_manual(c("gray", "red")) +
theme_bw()
ggplot(dem, aes(disproportionality, WomenInParl, colour = factor(violence))) +
geom_point() +
scale_colour_manual(values = c("gray", "red")) +
theme_bw()
ggplot(dem, aes(disproportionality, WomenInParl, colour = factor(violence))) +
geom_point(alpah = 0.5) +
scale_colour_manual(values = c("gray", "red")) +
theme_bw()
D1 <- zelig(violence ~ WomenInParl + HighProp + maj + DemAge, model = "relogit", data = dNew, tau = 71/3376, robust = list(method = "weave"), cite = FALSE)
summary(D1)
D1 <- zelig(violence ~ WomenInParl + HighProp + maj + DemAge + MurderRate, model = "relogit", data = dNew, tau = 71/3376, robust = list(method = "weave"), cite = FALSE)
D1 <- zelig(violence ~ WomenInParl + HighProp + maj + DemAge + UNMurderRate, model = "relogit", data = dNew, tau = 71/3376, robust = list(method = "weave"), cite = FALSE)
summary(D1)
ggplot(dem, aes(disproportionality, WomenInParl, colour = factor(violence))) +
geom_point(alpah = 0.5) +
facet_grid(.~violence) +
scale_colour_manual(values = c("gray", "red")) +
theme_bw()
library(ggplot2)
?hline
ggplot(dem, aes(disproportionality, WomenInParl, colour = factor(violence))) +
geom_point(alpah = 0.5) +
geom_vline(aes(xintercept = 6)) +
facet_grid(.~violence) +
scale_colour_manual(values = c("gray", "red")) +
theme_bw()
ggplot(dem, aes(log(disproportionality), WomenInParl, colour = factor(violence))) +
geom_point(alpah = 0.5) +
geom_vline(aes(xintercept = 6)) +
facet_grid(.~violence) +
scale_colour_manual(values = c("gray", "red")) +
theme_bw()
ggplot(dem, aes(log(disproportionality), WomenInParl, colour = factor(violence))) +
geom_point(alpah = 0.5) +
facet_grid(.~violence) +
scale_colour_manual(values = c("gray", "red")) +
theme_bw()
AnalysisURL <- "https://raw.github.com/christophergandrud/GreenBook/master/Analysis/MainAnalysis2.R"
library(survival)
?pspline
library(simPH)
?simGG
?ggfitStrata
library(simPH)
?coxsimInteract
exp(-1)
exp(-10)
exp(1)
exp(-1.457)
?png
library(simPH)
?simGG
library(DataCombine)
devtools::source_url("http://bit.ly/NXdCpk")
View(cpi.data)
cpi.data$time_to_election_midterm <- cpi.data$time_to_election
cpi.data$time_to_election_midterm <- if(cpi.data$time_to_election_midterm > 7) cpi.data$time_to_election_midterm - 8
for (i in 1:nrow(cpi.data)){
if (cpi.data[i, "time_to_election_midterm"] > 7){
cpi.data[i, time_to_election_midterm]<- cpi.data[i, time_to_election_midterm] - 8
else{
cpi.data[i, time_to_election_midterm]<- cpi.data[i, time_to_election_midterm]
}
]
for (i in 1:nrow(cpi.data)){
if (cpi.data[i, "time_to_election_midterm"] > 7){
cpi.data[i, time_to_election_midterm]<- cpi.data[i, time_to_election_midterm] - 8
else{
for (i in 1:nrow(cpi.data)){
if (cpi.data[i, "time_to_election_midterm"] > 7){
cpi.data[i, time_to_election_midterm]<- cpi.data[i, time_to_election_midterm] - 8
}else{
cpi.data[i, time_to_election_midterm]<- cpi.data[i, time_to_election_midterm]
}
]
for (i in 1:nrow(cpi.data)){
if (cpi.data[i, "time_to_election_midterm"] > 7){
cpi.data[i, time_to_election_midterm]<- cpi.data[i, time_to_election_midterm] - 8
}else{
cpi.data[i, time_to_election_midterm]<- cpi.data[i, time_to_election_midterm]
}
}
devtools::source_url("http://bit.ly/NXdCpk")
for (i in 1:nrow(cpi.data)){
if (cpi.data[i, "time_to_election_midterm"] > 7){
cpi.data[i, "time_to_election_midterm"]<- cpi.data[i, "time_to_election_midterm"] - 8
}else{
cpi.data[i, "time_to_election_midterm"]<- cpi.data[i, "time_to_election_midterm"]
}
}
View(cpi.data)
cpi.data$time_to_election_midterm <- cpi.data$time_to_election
for (i in 1:nrow(cpi.data)){
if (cpi.data[i, "time_to_election_midterm"] > 7){
cpi.data[i, "time_to_election_midterm"]<- cpi.data[i, "time_to_election_midterm"] - 8
}else{
cpi.data[i, "time_to_election_midterm"]<- cpi.data[i, "time_to_election_midterm"]
}
}
View(cpi.data)
cpi.data2SMidterm <- subset(cpi.data, !(time_to_election %in% c(6, 7)))
View(cpi.data2SMidterm)
devtools::source_url("http://bit.ly/NXdCpk")
library(Zelig)
library(digest)
library(DataCombine)
cpi.data$time_to_election_midterm <- cpi.data$time_to_election
for (i in 1:nrow(cpi.data)){
if (cpi.data[i, "time_to_election_midterm"] > 7){
cpi.data[i, "time_to_election_midterm"]<- cpi.data[i, "time_to_election_midterm"] - 8
}else{
cpi.data[i, "time_to_election_midterm"]<- cpi.data[i, "time_to_election_midterm"]
}
}
# Subset for mid-term and presidential elections
cpi.data2SMidterm <- subset(cpi.data, !(time_to_election_midterm %in% c(6, 7)))
View(cpi.data2SMidterm)
S1 <- zelig(error.prop.deflator.q2 ~ recession + ExpenditureGDP + PotentialGDP + DiscountRate2qChange + UNRATE + pres_party + time_to_election_midterm + GlobalModel + senate_dem_rep + house_dem_rep, model = "normal", data = cpi.data2SMidterm, cite = FALSE)
summary(S1)
SM2 <- zelig(error.prop.deflator.q2 ~ recession + ExpenditureGDP + PotentialGDP + DiscountRate2qChange + UNRATE + pres_party*time_to_election_midterm + GlobalModel + senate_dem_rep + house_dem_rep, model = "normal", data = cpi.data2SMidterm, cite = FALSE)
summary(SM2)
library(XML)
?fromXML
?XML
?xml
library(XML)
??xml
dat <- data.frame(x=1:10, y=10:1)
q1 <- qplot(x, y, data=dat)
q2 <- qplot(y, x, data=dat)
q3 <- qplot(x, y, data=dat, geom='line')
q4 <- qplot(y, x, data=dat, geom='line')
library(ggplot2)
library(gridExtra)
dat <- data.frame(x=1:10, y=10:1)
q1 <- qplot(x, y, data=dat)
q2 <- qplot(y, x, data=dat)
q3 <- qplot(x, y, data=dat, geom='line')
q4 <- qplot(y, x, data=dat, geom='line')
grid.arrange(q1, q2, q3, q4, heights=1:2, widths=1:2)
q1 <- qplot(x, y*1000, data=dat)
grid.arrange(q1, q2, q3, q4, heights=1:2, widths=1:2)
A <- ggplot(CO2, aes(x=Plant)) + geom_bar() +coord_flip()
B <- ggplot(CO2, aes(x=Type)) + geom_bar() +coord_flip()
gA <- ggplotGrob(A)
gB <- ggplotGrob(B)
maxWidth = grid::unit.pmax(gA$widths[2:5], gB$widths[2:5])
gA$widths[2:5] <- as.list(maxWidth)
gB$widths[2:5] <- as.list(maxWidth)
grid.arrange(gA, gB, ncol=1)
?ggplotGrob
library(Dynsim)
?dynsim
?dynsimGG
library(Dynsim)
?dynsimGG
Combined <- read.csv("~/Desktop/CajasCombined.csv", stringsAsFactors = FALSE)
Combined$date <- ymd(Combined$date)
# Convert Bank of ES codes to names
source("~/Dropbox/AMCProject/FailuresAndFederalism/IndvBankDataAnalysis/SourceCode/CajaNameFileCreate.R")
rmExcept(c('Combined', 'CajaCodes2007'))
Combined <- FindReplace(data = Combined, Var = 'bank', replaceData = CajaCodes2007, from = 'from', to = 'to')
library(stringr)
library(plyr)
DF = read.csv("~/Desktop/bp_Cajas1206.csv", header = 0,
stringsAsFactors = FALSE, encoding = " UTF-8")
# Clean data and add split character (#)
DF$V2<-gsub(pattern="\\.+",replacement=".",DF$V1)
DF$V2<-gsub(pattern="……",replacement="#",DF$V2)
DF$V2<-gsub("[0-9] [0-9]","#",DF$V2)
DF = read.csv("~/Desktop/bp_Cajas1206.csv", header = 0,
stringsAsFactors = FALSE, encoding = " UTF-8")
DF = read.csv("~/Desktop/bp_Cajas1206.csv", header = 0,
stringsAsFactors = FALSE, encoding = " UTF-8")
# Clean data and add split character (#)
DF$V2<-gsub(pattern="\\.+",replacement=".",DF$V1)
DF$V2<-gsub(pattern="……",replacement="#",DF$V2)
DF$V2<-gsub("[0-9] [0-9]","#",DF$V2)
DF$V2<-gsub("[0-9] [0-9]","#",DF$V2)
DF$V2<-gsub("\\.[0-9] ","#",DF$V2)
DF$V2<-gsub("[0-9]\\. ","#",DF$V2)
DF$V2<-gsub(" \\. ","#",DF$V2)
DF$V2<-gsub("#+","#",DF$V2)
DF$V2<-gsub("Pro-memoria:","#Pro-memoria:",DF$V2)
DF$V2 <- gsub ("^[1-5]#", "#", DF$V2)
DF$V2 <- gsub ("^[1-5][1-9]#", "#", DF$V2)
DF$V2 <- gsub ("^#", "", DF$V2)
# Split variable
ifoo <- data.frame(do.call('rbind', strsplit(DF$V2,"#",fixed=TRUE)))
View(ifoo)
View(DF)
DF = read.csv("~/Desktop/bp_Cajas1206.csv", header = 0,
stringsAsFactors = FALSE, encoding = " UTF-8")
View(DF)
View(DF)
DF <- data.frame(DF[, 1])
View(DF)
# Clean data and add split character (#)
DF$V2<-gsub(pattern="\\.+",replacement=".",DF$V1)
DF$V2<-gsub(pattern="……",replacement="#",DF$V2)
DF$V2<-gsub("[0-9] [0-9]","#",DF$V2)
DF$V2<-gsub("[0-9] [0-9]","#",DF$V2)
names(DF)
names(DF) <- "V1"
# Clean data and add split character (#)
DF$V2<-gsub(pattern="\\.+",replacement=".",DF$V1)
DF$V2<-gsub(pattern="……",replacement="#",DF$V2)
DF$V2<-gsub("[0-9] [0-9]","#",DF$V2)
DF$V2<-gsub("[0-9] [0-9]","#",DF$V2)
DF$V2<-gsub("\\.[0-9] ","#",DF$V2)
DF$V2<-gsub("[0-9]\\. ","#",DF$V2)
DF$V2<-gsub(" \\. ","#",DF$V2)
DF$V2<-gsub("#+","#",DF$V2)
DF$V2<-gsub("Pro-memoria:","#Pro-memoria:",DF$V2)
DF$V2 <- gsub ("^[1-5]#", "#", DF$V2)
DF$V2 <- gsub ("^[1-5][1-9]#", "#", DF$V2)
DF$V2 <- gsub ("^#", "", DF$V2)
View(DF)
# Split variable
foo <- data.frame(do.call('rbind', strsplit(DF$V2,"#",fixed=TRUE)))
View(DF)
View(foo)
library(DataCombine)
?FindReplace
?grepl.sub
grepl.sub
MoveFront
?MoveFront
?rmExcept
############
# Merge together data for regressions
# Christopher Gandrud
# 7 August 2013
############
# Load libraries
library(lubridate)
library(DataCombine)
library(plyr)
##### Econ Data ####
# Load econ data
EconData <- read.csv("~/Dropbox/Fed_Speeches_Paper/FedSpeech/Data/FREDEconData.csv")
EconData <- rename(EconData, c("DateField" = "month_year"))
EconData$month_year <- ymd(EconData$month_year)
# Drop if missing
EconData <- subset(EconData, !is.na(U6RATE))
EconData <- subset(EconData, !is.na(GDPDEF))
#### Partisan Data ####
Partisan <- read.csv("~/Dropbox/Fed_Speeches_Paper/FedSpeech/Data/Raw/PartisanData.csv")
## Merge with Econ data on a quarterly basis
EconData$Quarter <- quarter(EconData$month_year, with_year = TRUE)
EconPart <- merge(Partisan, EconData, by = "Quarter", all = TRUE)
#### Topics Data ####
Topics <- read.csv("~/Dropbox/Fed_Speeches_Paper/FedSpeech/Data/TopicsSpoken.csv")
Topics$full_date <- dmy(Topics$full_date)
#### Speeches Connectivity Data ####
Connect <- read.csv("~/Dropbox/Fed_Speeches_Paper/FedSpeech/Data/ConnectivityClean.csv",
stringsAsFactors = FALSE)
Connect$full_date <- ymd(Connect$full_date)
OrgClass <- read.csv("~/Dropbox/Fed_Speeches_Paper/FedSpeech/Data/Raw/BaseSpeechCount.csv",
stringsAsFactors = FALSE)
OrgClass$full_date <- dmy(OrgClass$full_date)
# Add FedSpeakToFed variable
source("~/Dropbox/Fed_Speeches_Paper/FedSpeech/SourceCode/DataCleanMerge/FedSpokenTo.R")
OrgClass <- merge(Sub, OrgClass, by = c("full_date", "name"))
# Keep if 1997 or later
OrgClass <- subset(OrgClass, year > 1996)
RemoveTitle <- function(data){
data[, "name"] <- gsub(pattern = "Governor†", "", data[, "name"])
data[, "name"] <- gsub(pattern = "Governor", "", data[, "name"])
data[, "name"] <- gsub(pattern = "Chairman†", "", data[, "name"])
data[, "name"] <- gsub(pattern = "Chairman", "", data[, "name"])
data[, "name"] <- gsub(pattern = "Vice Chair†", "", data[, "name"])
data[, "name"] <- gsub(pattern = "Vice Chair", "", data[, "name"])
data
}
trim.leading <- function (x)  sub("^\\s+", "", x)
Connect <- RemoveTitle(data = Connect)
Connect$name <- trim.leading(Connect$name)
OrgClass <- RemoveTitle(data = OrgClass)
# Merge
Speeches <- merge(Connect, OrgClass, by = c("full_date", "name"), all = TRUE)
Speeches <- subset(Speeches, !is.na(full_date))
Speeches <- MoveFront(Speeches, c("month_year"))
# Drop duplicates
Speeches <- Speeches[!duplicated(Speeches[, c("full_date", "name")]), ]
# Create new month_year variable
Speeches$month_year <- floor_date(Speeches$full_date, "month")
#### Congressional Scrutiny States ####
### See ChangePointCongFed.Rnw
Speeches$Scrutiny[Speeches$month_year < as.POSIXct("2007-04-01")] <- "1"
Speeches$Scrutiny[Speeches$month_year >= as.POSIXct("2007-04-01")] <- "3"
Speeches$Scrutiny[Speeches$month_year >= as.POSIXct("2010-06-01")] <- "2"
Speeches$Scrutiny <- ordered(Speeches$Scrutiny,
labels = c("Low", "Medium", "High"))
#### Final Merge and Clean ####
Combined <- merge(Speeches, Topics, by = c("full_date", "name"))
Combined <- merge(Combined, EconPart, by = "month_year")
KeepVars <- c("month_year", "full_date", "name", "position_cat", "Organisation",
"HFSC_ChairConnect", "HFSC_RankMembConnect", "SpeakerConnect",
"HFSC_CombConnect", "FedBoardCentrality", "FedSpoketoFed",
"bankersfinance", "other_private", "otherregulators",
"io", "community_organisations",
"thinktank",               "press_association",
"prof_econ_assoc",         "university",
"hearing",                 "trade_assoc",
"non_finance_gov",         "nonbuinessadvocacy",
"social_events",           "economic_literacy",
"other",                   "org",
"Scrutiny",                "SpeechID",
"Financial.Markets",       "Macroeconomics",
"Monetary.Policy",         "International.Economy",
"Local.Housing.Dev",       "Banking.Regulation",
"CPIAUCNS",                "PCEPI",
"INTDSRUSM193N",           "DFF",
"FEDFUNDS",                "GDPDEF",
"GDPC96",                  "U6RATE",
"SPCS10RSA",               "CPIAUCNSPercent",
"PCEPIPercent",            "GDPC96Percent",
"CaseShillerChange",       "UnemploymentRateChange",
"pres_party", "house_dem_rep", "senate_dem_rep")
Combined <- Combined[, KeepVars]
DeleteObj <- setdiff(ls(), c("Combined"))
rm(list = DeleteObj)
rm(DeleteObj)
write.csv(Combined, "~/Desktop/CombinedFed10Dec2013.csv", row.names = FALSE)
install.packages("highlight")
library(Dynsim)
?dynsim
?Dynsim
R.home('bin')
library(dynsim)
?dynsim
library(dynsim)
?dynsim
install.packages(c("GGally", "yaml"))
# Load required packages
library(countrycode)
library(reshape)
library(xtable)
#### UDS ####
# Download data from the Unified Democracy Score Website: http://www.unified-democracy-scores.org/
url <- "http://www.unified-democracy-scores.org/files/uds_summary.csv.gz"
temp <- tempfile()
download.file(url, temp)
uds <- read.csv(gzfile(temp, "uds_summary.csv"))
unlink(temp)
# Keep mean UDS score
uds <- uds[, c("country", "year", "mean")]
# Rename Mean UDS
uds <- rename(uds, c(mean = "UDS"))
# Replace West Germany with Germany
uds$country <- as.character(uds$country)
uds$country[uds$country == "Germany West"] <- "Germany"
uds <- subset(uds, country != "Germany East")
# Remove North Korea
uds$country[uds$country == "Korea South"] <- "Korea"
uds <- subset(uds, country != "Korea North")
# Create IMF code ID variable
uds$imfcode <- countrycode(uds$country, origin = "country.name", destination = "imf")
#### Polity IV ####
# Load data
setwd("/git_repositories/amcData/BaseFiles/PolityIV/")
polityIV <- read.csv("p4v2011.csv")
# Clean Polity data
polityIV$imfcode <- countrycode(polityIV$country, origin = "country.name", destination = "imf")
polityIV <- polityIV[, c("imfcode", "year", "polity2")]
polityIV <- subset(polityIV, !is.na(imfcode))
#### Merge Data Sets ####
CombinedDem <- merge(uds, polityIV, union("imfcode", "year"), all = TRUE)
# Drop duplicates
CombinedDem <- CombinedDem[!duplicated(CombinedDem[, 1:2]), ]
Test <- subset(Data, country == "GERMANY")
Test <- subset(Combined, country == "GERMANY")
Test <- subset(CombinedDem, country == "GERMANY")
Test <- subset(CombinedDem, country == "Germany")
View(Test)
Test <- subset(CombinedDem, country == "United Kingdom")
View(Test)
setwd("/git_repositories/amcData/BaseFiles/PolityIV/")
polityIV <- read.csv("p4v2012.csv")
# Clean Polity data
polityIV$imfcode <- countrycode(polityIV$country, origin = "country.name", destination = "imf")
polityIV <- polityIV[, c("imfcode", "year", "polity2")]
polityIV <- subset(polityIV, !is.na(imfcode))
#### Merge Data Sets ####
CombinedDem <- merge(uds, polityIV, union("imfcode", "year"), all = TRUE)
# Drop duplicates
CombinedDem <- CombinedDem[!duplicated(CombinedDem[, 1:2]), ]
Test <- subset(CombinedDem, country == "United Kingdom")
View(Test)
range(polityIV$year)
range(Test$year)
Test <- subset(polityIV, country == "United Kingdowm")
Test <- subset(polityIV, country == "United Kingdom")
setwd("/git_repositories/amcData/BaseFiles/PolityIV/")
polityIV <- read.csv("p4v2012.csv")
# Clean Polity data
polityIV$imfcode <- countrycode(polityIV$country, origin = "country.name",
